"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[1745],{22057:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var s=t(85893),i=t(11151);const a={sidebar_position:5},r="Add assets to Astar Portal",o={id:"learn/interoperability/xcm/integration/add-to-portal",title:"Add assets to Astar Portal",description:"Once a channel is opened between parachains and assets have been registered, developers can create a PR on Astar Portal Github, to have their assets added. Here\u2019s what you need to know about the integration of the XCM assets into Astar Portal.",source:"@site/docs/learn/interoperability/xcm/integration/add-to-portal.md",sourceDirName:"learn/interoperability/xcm/integration",slug:"/learn/interoperability/xcm/integration/add-to-portal",permalink:"/ja/docs/learn/interoperability/xcm/integration/add-to-portal",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/learn/interoperability/xcm/integration/add-to-portal.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"XCM Tools",permalink:"/ja/docs/learn/interoperability/xcm/integration/tools"},next:{title:"XCM Asset List",permalink:"/ja/docs/learn/interoperability/xcm/asset-list"}},c={},d=[{value:"Define the Parachain Information",id:"define-the-parachain-information",level:2},{value:"Define the Asset Information",id:"define-the-asset-information",level:2},{value:"Define Methods for XCM Transfers and Fetching Asset Balances",id:"define-methods-for-xcm-transfers-and-fetching-asset-balances",level:2},{value:"Requirements for creating a PR",id:"requirements-for-creating-a-pr",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"add-assets-to-astar-portal",children:"Add assets to Astar Portal"}),"\n",(0,s.jsxs)(n.p,{children:["Once a channel is opened between parachains and assets have been registered, developers can create a PR on ",(0,s.jsx)(n.a,{href:"https://github.com/AstarNetwork/astar-apps",children:"Astar Portal"})," Github, to have their assets added. Here\u2019s what you need to know about the integration of the XCM assets into Astar Portal."]}),"\n",(0,s.jsx)(n.h2,{id:"define-the-parachain-information",children:"Define the Parachain Information"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add the ",(0,s.jsx)(n.code,{children:"Chain name"})," for the ",(0,s.jsx)(n.a,{href:"https://github.com/AstarNetwork/astar-apps/blob/main/src/v2/models/XcmModels.ts#L2",children:"Chain"})," enum."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add the ",(0,s.jsx)(n.code,{children:"parachain id"})," for the ",(0,s.jsx)(n.a,{href:"https://github.com/AstarNetwork/astar-apps/blob/main/src/v2/models/XcmModels.ts#L17",children:"parachainIds"})," enum."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add the ",(0,s.jsx)(n.code,{children:"chain metadata"})," for the ",(0,s.jsx)(n.a,{href:"https://github.com/AstarNetwork/astar-apps/blob/main/src/modules/xcm/index.ts#L48",children:"xcmChainObj"})," object variable."]}),"\n",(0,s.jsx)(n.p,{children:"e.g."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"  interface XcmChain {\n    name: Chain;\n    parachainId: parachainIds;\n    relayChain: Chain;\n    subscan: string;\n    // Note: an image URL address for the chain logo\n    img: string;\n    // Note: websocket endpoint for connecting to the parachains API\n    endpoint: string;\n    // Note: `true` if ASTR/SDN is listed on the parachains\n    isAstarNativeToken: boolean;\n}\n\n  const xcmChainObj = {\n    [Chain.STATEMINT]: {\n    name: Chain.STATEMINT,\n    relayChain: Chain.POLKADOT,\n    img: 'https://polkadot.js.org/apps/static/statemine.65437936..svg',\n    parachainId: parachainIds.STATEMINT,\n    endpoint: 'wss://statemint-rpc.dwellir.com',\n    subscan: 'https://statemint.subscan.io',\n    isAstarNativeToken: false,\n  }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"define-the-asset-information",children:"Define the Asset Information"}),"\n",(0,s.jsxs)(n.p,{children:["Add the asset information for the ",(0,s.jsx)(n.a,{href:"https://github.com/AstarNetwork/astar-apps/blob/main/src/modules/xcm/tokens/index.ts#L15",children:"xcmToken"})," object variable."]}),"\n",(0,s.jsx)(n.p,{children:"e.g."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"interface XcmTokenInformation {\n  symbol: string;\n  logo: string;\n  originChain: string;\n  isNativeToken: boolean;\n  isXcmCompatible: boolean;\n  // Note: Asset ID on Astar/Shiden\n  assetId: string;\n  // Note: Asset ID on the origin chain\n  originAssetId: string;\n  // Note: this amount should be at lest higher than the Existential Deposit on the origin chain\n  minBridgeAmount: string;\n}\n\nconst xcmToken = {\n  [endpointKey.ASTAR]: [\n    {\n      symbol: 'USDT',\n      isNativeToken: false,\n      assetId: '4294969280',\n      originAssetId: '1984',\n      logo: 'https://assets.coingecko.com/coins/images/325/small/Tether-logo.png?1598003707',\n      isXcmCompatible: true,\n      originChain: Chain.STATEMINT,\n      minBridgeAmount: '0.21',\n    },\n  ],\n  [endpointKey.SHIDEN]: [\n  {\n      symbol: 'KAR',\n      isNativeToken: true,\n      assetId: '18446744073709551618',\n      originAssetId: 'KAR',\n      logo: 'https://assets.coingecko.com/coins/images/17172/small/karura.jpeg?1626782066',\n      isXcmCompatible: true,\n      originChain: Chain.KARURA,\n      minBridgeAmount: '0.11',\n    },\n  ],\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"define-methods-for-xcm-transfers-and-fetching-asset-balances",children:"Define Methods for XCM Transfers and Fetching Asset Balances"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a class (Repository) that inherits from the ",(0,s.jsx)(n.a,{href:"https://github.com/AstarNetwork/astar-apps/blob/main/src/v2/repositories/implementations/XcmRepository.ts",children:"XcmRepository"})," class and define the logic under ",(0,s.jsx)(n.code,{children:"getTransferCall"})," and ",(0,s.jsx)(n.code,{children:"getTokenBalance"})," methods ",(0,s.jsx)(n.a,{href:"https://github.com/AstarNetwork/astar-apps/blob/main/src/v2/repositories/implementations/xcm/AcalaXcmRepository.ts",children:"(e.g.)"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Export the Repository class in ",(0,s.jsx)(n.a,{href:"https://github.com/AstarNetwork/astar-apps/blob/main/src/v2/repositories/implementations/index.ts",children:"/src/v2/repositories/implementations/index.ts"})]}),"\n",(0,s.jsxs)(n.li,{children:["Add the Repository at ",(0,s.jsx)(n.a,{href:"https://github.com/AstarNetwork/astar-apps/blob/main/src/v2/config/xcm/XcmRepositoryConfiguration.ts#L11",children:"XcmRepositoryConfiguration"})," object variable."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"requirements-for-creating-a-pr",children:"Requirements for creating a PR"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"You've tested deposit and withdrawal functions on Astar Portal."}),"\n",(0,s.jsxs)(n.li,{children:["Deposit and withdrawal functions have additionally been tested with the ",(0,s.jsx)(n.code,{children:"minBridgeAmount"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["You've tested withdrawal of assets to accounts that have 0 balance of the assets being withdrawn (to check whether ",(0,s.jsx)(n.code,{children:"minBridgeAmount"})," is higher than ",(0,s.jsx)(n.code,{children:"Existential Deposit"})," defined on the origin chain)."]}),"\n",(0,s.jsx)(n.li,{children:"You've included Subscan link(s) to the XCM transaction details, for each of the assets you've registered."}),"\n",(0,s.jsxs)(n.li,{children:["And finally, have deployed the forked app, and submitted the staging URL ",(0,s.jsx)(n.a,{href:"/ja/docs/build/builder-guides/integration_toolings/deploy-astar-portal",children:"ref"}),"."]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>r});var s=t(67294);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);