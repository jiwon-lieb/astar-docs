"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[3790],{94670:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>h});var n=a(85893),s=a(11151);const r={},i="How to use Hardhat to deploy on Shibuya",o={id:"build/builder-guides/astar_features/use_hardhat",title:"How to use Hardhat to deploy on Shibuya",description:"TL;DR",source:"@site/docs/build/builder-guides/astar_features/use_hardhat.md",sourceDirName:"build/builder-guides/astar_features",slug:"/build/builder-guides/astar_features/use_hardhat",permalink:"/ja/docs/build/builder-guides/astar_features/use_hardhat",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/build/builder-guides/astar_features/use_hardhat.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How to use Truffle to deploy on Shibuya",permalink:"/ja/docs/build/builder-guides/astar_features/truffle"},next:{title:"How to use Remix IDE to deploy an on-chain storage contract on Astar EVM",permalink:"/ja/docs/build/builder-guides/astar_features/use_remix"}},d={},h=[{value:"TL;DR",id:"tldr",level:2},{value:"What is Astar EVM?",id:"what-is-astar-evm",level:2},{value:"What is Hardhat?",id:"what-is-hardhat",level:2},{value:"Set up Node.js environment for Hardhat",id:"set-up-nodejs-environment-for-hardhat",level:2},{value:"Create a Hardhat project",id:"create-a-hardhat-project",level:2},{value:"Set up a private key",id:"set-up-a-private-key",level:3},{value:"Add Shibuya Network details to Hardhat project configuration file",id:"add-shibuya-network-details-to-hardhat-project-configuration-file",level:3},{value:"Add Shibuya testnet to MetaMask",id:"add-shibuya-testnet-to-metamask",level:3},{value:"Claim Shibuya testnet tokens from the Discord faucet",id:"claim-shibuya-testnet-tokens-from-the-discord-faucet",level:3},{value:"Deploy the smart contract on Shibuya",id:"deploy-the-smart-contract-on-shibuya",level:3},{value:"Reference",id:"reference",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"how-to-use-hardhat-to-deploy-on-shibuya",children:"How to use Hardhat to deploy on Shibuya"}),"\n",(0,n.jsx)(t.h2,{id:"tldr",children:"TL;DR"}),"\n",(0,n.jsx)(t.p,{children:"Hardhat is an Ethereum (EVM) development environment that helps developers to manage and automate the recurring tasks inherent to the process of building smart contracts and dApps, which means compiling and testing at the very core."}),"\n",(0,n.jsx)(t.p,{children:"Since Astar Network is a multi-VM smart contract hub, we support both WASM and EVM smart contracts, which means you can use Ethereum dev tools including Hardhat to directly interact with Astar EVM\u2019s API and deploy Solidity smart contracts on Astar."}),"\n",(0,n.jsx)(t.p,{children:"In this cookbook, we will guide you on how to set up the environment for Astar EVM development, how to create and configure a Hardhat project for Astar EVM, and how to deploy a simple Solidity smart contract on Astar EVM via Hardhat."}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"what-is-astar-evm",children:"What is Astar EVM?"}),"\n",(0,n.jsx)(t.p,{children:"As a multi-VM smart contract hub, Astar Network supports both WASM and EVM smart contracts, which means both Solidity smart contracts and WASM-based smart contracts can be deployed on Astar Network."}),"\n",(0,n.jsx)(t.p,{children:"And for Solidity developers, you can directly use Ethereum dev tools including Hardhat, Remix, MetaMask to directly interact with Astar EVM\u2019s API and deploy Solidity smart contracts on Astar EVM."}),"\n",(0,n.jsx)(t.h2,{id:"what-is-hardhat",children:"What is Hardhat?"}),"\n",(0,n.jsx)(t.p,{children:"Hardhat is a development environment that helps developers in testing, compiling, deploying, and debugging smart contracts and dApps on Ethereum Virtual Machine (EVM). Hardhat smart contract development environment offers suitable tools to developers for managing the development workflow, and identifying causes for the failure of applications."}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"set-up-nodejs-environment-for-hardhat",children:"Set up Node.js environment for Hardhat"}),"\n",(0,n.jsx)(t.p,{children:"Hardhat is built on top of Node.js, the JavaScript runtime built on Chrome's V8 JavaScript engine. As the first step for to set up Hardhat, we need to set up Node.js environment."}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"create-a-hardhat-project",children:"Create a Hardhat project"}),"\n",(0,n.jsx)(t.p,{children:"First, let\u2019s create a directory for this tutorial with the following command."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"mkdir hardhat_test\ncd hardhat_test\n"})}),"\n",(0,n.jsx)(t.p,{children:"Then, let\u2019s initialize npm environment."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"npm init -y\n"})}),"\n",(0,n.jsx)(t.p,{children:"After the command above, you will see the following return message."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'Wrote to /Users/suguruseo/Documents/Astar Work/hardhat/test-hardhat/hardhat_test/package.json:{\n  "name": "hardhat_test",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "keywords": [],\n  "author": "",\n  "license": "ISC"\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"At last, we install Hardhat and create a Hardhat project."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"npm install hardhat\n"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"1",src:a(51064).Z+"",width:"1660",height:"444"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"set-up-a-private-key",children:"Set up a private key"}),"\n",(0,n.jsx)(t.p,{children:"In this section, we will set up a private key."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"touch private.json\nvim private.json\n"})}),"\n",(0,n.jsx)(t.p,{children:"Then, we add a private key for testing deployment here. PLEASE DON NOT USE IT IN PROD DEPLOYMENT."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'{"privateKey":"0xde9be858da4a475276426320d5e9262ecfc3ba460bfac56360bfa6c4c28b4ee0"}\n'})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"add-shibuya-network-details-to-hardhat-project-configuration-file",children:"Add Shibuya Network details to Hardhat project configuration file"}),"\n",(0,n.jsx)(t.p,{children:"Now, we need to add network settings in hardhat.config.js file like below."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",children:'require("@nomicfoundation/hardhat-toolbox");\n\ntask("accounts", "Prints the list of accounts", async () => {\n  const accounts = await ethers.getSigners();\n\n  for (const account of accounts) {\n    console.log(account.address);\n  }\n});\n\nconst { privateKey } = require(\'./private.json\');\n\n/** @type import(\'hardhat/config\').HardhatUserConfig */\nmodule.exports = {\n  solidity: "0.8.17",\n  networks: {\n    localhost: {\n        url:"http://localhost:8545",\n        chainId:31337,\n        accounts: [privateKey],\n      },\n    shibuya: {\n      url:"https://evm.shibuya.astar.network",\n      chainId:81,\n      accounts: [privateKey],\n    }\n  }\n};\n'})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"add-shibuya-testnet-to-metamask",children:"Add Shibuya testnet to MetaMask"}),"\n",(0,n.jsx)(t.p,{children:"Now, we can manually add Shibuya test net in MetaMask like below."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"2",src:a(14821).Z+"",width:"1036",height:"1496"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"claim-shibuya-testnet-tokens-from-the-discord-faucet",children:"Claim Shibuya testnet tokens from the Discord faucet"}),"\n",(0,n.jsxs)(t.p,{children:["Now, we need gas fee to deploy smart contract.\nFor this purpose, we use our Shibuya faucet from our ",(0,n.jsx)(t.a,{href:"https://discord.gg/astarnetwork",children:"discord"})," like below."]}),"\n",(0,n.jsx)(t.p,{children:"We need to type something like below."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",children:"/drip network: Your Shibuya Address\n"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"3",src:a(91748).Z+"",width:"1628",height:"624"})}),"\n",(0,n.jsx)(t.p,{children:"We can confirm we got some Shibuya token now."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"4",src:a(13163).Z+"",width:"692",height:"1174"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"deploy-the-smart-contract-on-shibuya",children:"Deploy the smart contract on Shibuya"}),"\n",(0,n.jsx)(t.p,{children:"Finally, we deploy our smart contract by running the command below."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"npx hardhat run --network shibuya scripts/sample-script.js\n"})}),"\n",(0,n.jsx)(t.p,{children:"Thats\u2019s it! We see smart contract is successfully deployed."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"5",src:a(58093).Z+"",width:"1598",height:"98"})}),"\n",(0,n.jsxs)(t.p,{children:["You can also confirm that the contract was deployed successfully by checking ",(0,n.jsx)(t.a,{href:"https://blockscout.com/shibuya/",children:"Blackscout"}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"6",src:a(45213).Z+"",width:"2672",height:"1504"})}),"\n",(0,n.jsx)(t.p,{children:"Happy Hacking!"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"reference",children:"Reference"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Official Document for Hardhat: ",(0,n.jsx)(t.a,{href:"https://hardhat.org/hardhat-runner/docs/getting-started#overview",children:"https://hardhat.org/hardhat-runner/docs/getting-started#overview"})]}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},51064:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/1-c243f9496a0de42a280048daedadd919.png"},14821:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/2-63c09a71505921fc912633750de3776a.png"},91748:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/3-182ebbbbe38c7e1067b2ca477abc2d90.png"},13163:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/4-bcaa6e98cea32abf64796643eb222a36.png"},58093:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/5-99fc73af3abb737f74d59eb5b48ff8dc.png"},45213:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/6-e58f7f972a0e6ba22533dabb602e8bb4.png"},11151:(e,t,a)=>{a.d(t,{Z:()=>o,a:()=>i});var n=a(67294);const s={},r=n.createContext(s);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);