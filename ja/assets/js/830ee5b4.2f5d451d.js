"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[8723],{8734:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var i=t(85893),r=t(11151);const s={sidebar_position:1},a="Acurast",o={id:"build/integrations/oracles/acurast",title:"Acurast",description:"[Acurast]//acurast.com/",source:"@site/docs/build/integrations/oracles/acurast.md",sourceDirName:"build/integrations/oracles",slug:"/build/integrations/oracles/acurast",permalink:"/ja/docs/build/integrations/oracles/acurast",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/build/integrations/oracles/acurast.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Alchemy",permalink:"/ja/docs/build/integrations/node-providers/alchemy"},next:{title:"Band Protocol",permalink:"/ja/docs/build/integrations/oracles/band"}},c={},l=[{value:"Overview",id:"overview",level:2},{value:"Using Acurast",id:"using-acurast",level:2},{value:"Astar Destination Example",id:"astar-destination-example",level:3},{value:"Shiden Destination",id:"shiden-destination",level:3},{value:"Obtain Data with Acurast on WASM and EVM",id:"obtain-data-with-acurast-on-wasm-and-evm",level:2},{value:"How to Get Started",id:"how-to-get-started",level:3},{value:"WASM Example",id:"wasm-example",level:3},{value:"EVM Example",id:"evm-example",level:3},{value:"Script",id:"script",level:3},{value:"Job Specification",id:"job-specification",level:3},{value:"Full Documentation",id:"full-documentation",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"acurast",children:"Acurast"}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://acurast.com/",children:"Acurast"})," is a platform and protocol designed to enable Web3 projects and enterprises to realize the full potential of Web3 by interconnecting worlds like Web2, Web3, AI, IOT through Acurast's Universal Interoperability."]}),"\n",(0,i.jsx)(n.h2,{id:"using-acurast",children:"Using Acurast"}),"\n",(0,i.jsxs)(n.p,{children:['Through Acurast developers can arbitrarly fetch data from public or permissioned APIs for the "Oracle" use case such as price feeds for DeFi platforms through a decentralized execution layer of off-chain workers. These ',(0,i.jsx)(n.a,{href:"https://docs.acurast.com/acurast-processors",children:"Processors"}),", hosted by individuals, provide the resources of their Trusted Execution Environment that can be utilized to run computation yielding a verifiable output directly on chain. Developers can use the ",(0,i.jsx)(n.a,{href:"https://console.acurast.com/",children:"Acurast Console"})," to create new request and to get access to these interoperability resources."]}),"\n",(0,i.jsxs)(n.p,{children:["Acurast supports Astar's ",(0,i.jsx)(n.strong,{children:"WASM"})," and ",(0,i.jsx)(n.strong,{children:"EVM"})," environments. Contract Examples address can be found below:"]}),"\n",(0,i.jsx)(n.h3,{id:"astar-destination-example",children:"Astar Destination Example"}),"\n",(0,i.jsx)(n.p,{children:"WASM Smart Contract: b2o6ENagNWAxQT9f9yHFxfVMSpJA7kK6ouMhNN6veKXi3jw"}),"\n",(0,i.jsx)(n.h3,{id:"shiden-destination",children:"Shiden Destination"}),"\n",(0,i.jsx)(n.p,{children:"WASM Smart Contract: 0xDA7a001b254CD22e46d3eAB04d937489c93174C3"}),"\n",(0,i.jsx)(n.h2,{id:"obtain-data-with-acurast-on-wasm-and-evm",children:"Obtain Data with Acurast on WASM and EVM"}),"\n",(0,i.jsx)(n.h3,{id:"how-to-get-started",children:"How to Get Started"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Deploy one of the example contracts to WASM or EVM"}),"\n",(0,i.jsx)(n.li,{children:"Define your script detailing where to fetch data, computation etc."}),"\n",(0,i.jsxs)(n.li,{children:["Create a Job on the ",(0,i.jsx)(n.a,{href:"https://console.acurast.com/",children:"Acurast Console"})]}),"\n",(0,i.jsx)(n.li,{children:"Processors will fulfill verifiable outputs in your defined interval to your contract"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"wasm-example",children:"WASM Example"}),"\n",(0,i.jsxs)(n.p,{children:["The following example shows simple WASM smart contracts implemented with ",(0,i.jsx)(n.a,{href:"https://use.ink/",children:"ink!"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Keep in mind that you can do much more with Acurast and get access to all interoperability modules besides these examples."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'#![cfg_attr(not(feature = "std"), no_std)]\n\nuse ink;\n\n#[ink::contract]\nmod receiver {\n    #[ink(storage)]\n    pub struct Receiver {\n        price: u128,\n    }\n\n    impl Receiver {\n        #[ink(constructor)]\n        pub fn default() -> Self {\n            Self {\n                price: Default::default(),\n            }\n        }\n\n        #[ink(message)]\n        pub fn fulfill(&mut self, price: u128) {\n            self.price = price;\n        }\n\n        #[ink(message)]\n        pub fn get_price(&self) -> u128 {\n            self.price\n        }\n    }\n}\n\n'})}),"\n",(0,i.jsx)(n.h3,{id:"evm-example",children:"EVM Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'pragma solidity 0.8.10;\n\n/**\n * @title Simple price feed contract\n */\ncontract PriceFeed {\n    // Account authorized to update the prices\n    address public provider = 0xF7498512502f90aA1ff299b93927417461EC7Bd5;\n\n    // Callable by other contracts\n    uint128 public price;\n\n    /**\n     * Provide the latest price\n     */\n    function fulfill(uint128 new_price) external {\n        require(msg.sender == provider, "NOT_PROVIDER");\n        price = new_price;\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"script",children:"Script"}),"\n",(0,i.jsx)(n.p,{children:'This example script shows how a "Price Feeds" is fetched from Binance and pushed to a WASM smart contract. You can view and test the your script on the Acurast Console.'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'const callIndex = "0x4606"; // the call index for the \'call\' extrinsic.\nconst destination = "b2o6ENagNWAxQT9f9yHFxfVMSpJA7kK6ouMhNN6veKXi3jw"; // contract address that will receive the \'fulfill\' call.\n_STD_.chains.substrate.signer.setSigner("SECP256K1"); // the type of signer used for sign the extrinsic call\nhttpGET(\n  "https://api.binance.com/api/v3/ticker/price?symbol=AAVEBUSD",\n  {},\n  (response, _certificate) => {\n    const price = JSON.parse(response)["price"] * 10 ** 18;\n    const payload = _STD_.chains.substrate.codec.encodeUnsignedNumber(\n      price,\n      128\n    );\n    _STD_.chains.substrate.contract.fulfill(\n      "https://rpc.astar.network",\n      callIndex,\n      destination,\n      payload,\n      {\n        refTime: "3951114240",\n        proofSize: "125952",\n      },\n      (opHash) => {\n        print("Succeeded: " + opHash);\n      },\n      (err) => {\n        print("Failed fulfill: " + err);\n      }\n    );\n  },\n  (err) => {\n    print("Failed get price: " + err);\n  }\n);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"job-specification",children:"Job Specification"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Go to the ",(0,i.jsx)(n.a,{href:"https://console.acurast.com/",children:"Acurast Console"})," and log in with your ",(0,i.jsx)(n.a,{href:"https://www.talisman.xyz/wallet",children:"Talisman Wallet"})," or your ",(0,i.jsx)(n.a,{href:"https://polkadot.js.org/extension/",children:"PolkadotJS Extension"}),"."]}),"\n",(0,i.jsx)(n.li,{children:'Go to "Create Job" and select your destination, the ecosystem you\'re building in.'}),"\n",(0,i.jsx)(n.li,{children:'Select an existing template, adapt it or write your own code that fits your needs. Test your code with "Test Code".'}),"\n",(0,i.jsx)(n.li,{children:"Select your own Processor or use public ones."}),"\n",(0,i.jsx)(n.li,{children:"Define your execution schedule with the parameters such as start and endtime, interval etc."}),"\n",(0,i.jsx)(n.li,{children:"Specify your usage parameters."}),"\n",(0,i.jsx)(n.li,{children:"Specify your additional parameters such as the reward."}),"\n",(0,i.jsx)(n.li,{children:"Publish your Job and wait for your first fulfillment."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Or check out ",(0,i.jsx)(n.a,{href:"https://console.acurast.com/developers/introduction#get-started",children:"How to get started with the Acurast Console"})," to register your Job."]}),"\n",(0,i.jsx)(n.h2,{id:"full-documentation",children:"Full Documentation"}),"\n",(0,i.jsxs)(n.p,{children:["You can find Acurast's official documentation ",(0,i.jsx)(n.a,{href:"https://docs.acurast.com/",children:"here"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var i=t(67294);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);