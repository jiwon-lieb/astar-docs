"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[8769],{4378:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=s(85893),i=s(11151);const r={sidebar_position:3},a="Nginx Server",o={id:"build/nodes/archive-node/nginx",title:"Nginx Server",description:"To access your archive node from outside, you need to install a server and setup a certificate.",source:"@site/docs/build/nodes/archive-node/nginx.md",sourceDirName:"build/nodes/archive-node",slug:"/build/nodes/archive-node/nginx",permalink:"/ja/docs/build/nodes/archive-node/nginx",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/build/nodes/archive-node/nginx.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Docker",permalink:"/ja/docs/build/nodes/archive-node/docker"},next:{title:"Learn about Collators",permalink:"/ja/docs/build/nodes/collator/learn"}},l={},d=[{value:"Firewall",id:"firewall",level:2},{value:"Domain name",id:"domain-name",level:2},{value:"Installation",id:"installation",level:2},{value:"Generate SSL certificate",id:"generate-ssl-certificate",level:2},{value:"Switch to https",id:"switch-to-https",level:2},{value:"Usage",id:"usage",level:2},{value:"Self-signed certificate",id:"self-signed-certificate",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"nginx-server",children:"Nginx Server"}),"\n",(0,t.jsx)(n.p,{children:"To access your archive node from outside, you need to install a server and setup a certificate.\nIn this guide, we will use the Nginx server as an example."}),"\n",(0,t.jsx)(n.h2,{id:"firewall",children:"Firewall"}),"\n",(0,t.jsx)(n.p,{children:"Your server will communicate through HTTP ports, you need to enable ports 80 (http) and 443 (https) in your firewall."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["At the end of the configuration, you can close port 80 since only port 443 will be used to access the node. See the section below, ",(0,t.jsx)(n.em,{children:"Self-signed certificate"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"domain-name",children:"Domain name"}),"\n",(0,t.jsxs)(n.p,{children:["This guide assumes that you have a ",(0,t.jsx)(n.strong,{children:"domain name"})," and control over the ",(0,t.jsx)(n.strong,{children:"DNS"}),". In this case, you need to add the ",(0,t.jsx)(n.strong,{children:"A record"})," with the sub domain you will use and the IP address of your node into you DNS provider console."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"If you don't have a domain name, you will have to generate a self-signed certificate and access your node through the raw ip address of your server."})}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"In the following steps, don't forget to update {SUB_DOMAIN} with your full sub domain name.\nExample: ws.astar.awesomedappproject.io"})}),"\n",(0,t.jsxs)(n.p,{children:["First, install ",(0,t.jsx)(n.strong,{children:"Nginx"})," and ",(0,t.jsx)(n.strong,{children:"Certbot"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo apt-get install nginx snapd\nsudo snap install core; sudo snap refresh core\nsudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create and enable the site:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"cd /etc/nginx/sites-available\nsudo cp default {SUB_DOMAIN}\nsudo ln -s /etc/nginx/sites-available/{SUB_DOMAIN} /etc/nginx/sites-enabled/\n"})}),"\n",(0,t.jsx)(n.p,{children:"Edit the site file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo nano {SUB_DOMAIN}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Change the ",(0,t.jsx)(n.code,{children:"root"})," and ",(0,t.jsx)(n.code,{children:"server_name"})," to get a file like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"server {\n    listen 80;\n    listen [::]:80;\n\n    root /var/www/{SUB_DOMAIN}/html;\n    index index.html index.htm index.nginx-debian.html;\n\n    server_name {SUB_DOMAIN};\n\n    location / {\n            try_files $uri $uri/ =404;\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"generate-ssl-certificate",children:"Generate SSL certificate"}),"\n",(0,t.jsx)(n.p,{children:"Issue the Certbot certificate:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo certbot certonly --nginx\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Certbot will issue the SSL certificate into ",(0,t.jsx)(n.code,{children:"/etc/letsencrypt/live"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"switch-to-https",children:"Switch to https"}),"\n",(0,t.jsx)(n.p,{children:"Edit again the site file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo nano {SUB_DOMAIN}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Delete the existing lines and set the content as below:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"map $http_upgrade $connection_upgrade {\n    default upgrade;\n    '' close;\n}\n\nserver {\n\n    # SSL configuration\n    #\n    listen 443 ssl;\n    listen [::]:443 ssl;\n\n    root /var/www/{SUB_DOMAIN}/html;\n\n    server_name {SUB_DOMAIN};\n    ssl_certificate /etc/letsencrypt/live/{SUB_DOMAIN}/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/{SUB_DOMAIN}/privkey.pem; # managed by Certbot\n    ssl_session_timeout 5m;\n    ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;\n    ssl_ciphers   HIGH:!aNULL:!MD5;\n    ssl_prefer_server_ciphers on;\n\n    location / {\n        proxy_pass http://localhost:9944;\n        proxy_pass_request_headers on;\n        proxy_http_version 1.1;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n    }\n\n}\n\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"In the example above, note that port 9944 is used in proxy_pass. This is the WS port.\nChange this to 9944 to pass the RPC port."})}),"\n",(0,t.jsx)(n.p,{children:"Check and restart nginx:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo nginx -t\nsudo systemctl restart nginx\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.p,{children:"This is it, your arcive node is set and available from outside."}),"\n",(0,t.jsxs)(n.p,{children:["If you set a WS endpoint, you can explore the chain from the ",(0,t.jsx)(n.a,{href:"https://polkadot.js.org/apps",children:"Polkadot.js"})," portal using the format ",(0,t.jsx)(n.a,{href:"wss://%7BSUB_DOMAIN%7D",children:"wss://{SUB_DOMAIN}"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"2",src:s(15638).Z+"",width:"329",height:"552"})}),"\n",(0,t.jsxs)(n.p,{children:["If you set a ",(0,t.jsx)(n.strong,{children:"RPC endpoint"}),", you can it through ",(0,t.jsx)(n.a,{href:"https://%7BSUB_DOMAIN%7D",children:"https://{SUB_DOMAIN}"})]}),"\n",(0,t.jsx)(n.h2,{id:"self-signed-certificate",children:"Self-signed certificate"}),"\n",(0,t.jsx)(n.p,{children:"In case you do not have a domain name, you need to issue yourself a self-signed certificate:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt\nsudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then in the https site config file, you will have to replace the following values:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;\nssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;\nssl_dhparam /etc/ssl/certs/dhparam.pem;\n"})}),"\n",(0,t.jsx)(n.p,{children:"In all steps, the {SUB_DOMAIN} value will be the node server ip address."})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},15638:(e,n,s)=>{s.d(n,{Z:()=>t});const t=s.p+"assets/images/2-5dfa9dfb14a0af95394ca7901c881a5e.png"},11151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>a});var t=s(67294);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);