"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[4790],{63702:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var s=n(85893),r=n(11151);const i={},a="Query dApp Staking extrinsics and participating addresses with Python",o={id:"build/builder-guides/integration_toolings/use-python",title:"Query dApp Staking extrinsics and participating addresses with Python",description:"TL;DR",source:"@site/docs/build/builder-guides/integration_toolings/use-python.md",sourceDirName:"build/builder-guides/integration_toolings",slug:"/build/builder-guides/integration_toolings/use-python",permalink:"/ja/docs/build/builder-guides/integration_toolings/use-python",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/build/builder-guides/integration_toolings/use-python.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deploying Astar Blockchain HTTP Server using API Sidecar",permalink:"/ja/docs/build/builder-guides/integration_toolings/using-sidecar"},next:{title:"Create and manage a PSP22 assets on Shibuya",permalink:"/ja/docs/build/builder-guides/xvm_wasm/manage_psp22_asset"}},c={},l=[{value:"TL;DR",id:"tldr",level:2},{value:"What is Substrate?",id:"what-is-substrate",level:2},{value:"What is Substrate Python Interface?",id:"what-is-substrate-python-interface",level:2},{value:"Instructions",id:"instructions",level:2},{value:"1. Install Substrate Python Interface",id:"1-install-substrate-python-interface",level:3},{value:"2. Construct an API provider Instance",id:"2-construct-an-api-provider-instance",level:3},{value:"3. Retrieve blocks and extrinsics using py-substrate-interface",id:"3-retrieve-blocks-and-extrinsics-using-py-substrate-interface",level:3},{value:"4. Collect the addresses participating in dApp staking",id:"4-collect-the-addresses-participating-in-dapp-staking",level:3},{value:"FAQ",id:"faq",level:2},{value:"Reference",id:"reference",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"query-dapp-staking-extrinsics-and-participating-addresses-with-python",children:"Query dApp Staking extrinsics and participating addresses with Python"}),"\n",(0,s.jsx)(t.h2,{id:"tldr",children:"TL;DR"}),"\n",(0,s.jsxs)(t.p,{children:["As a Substrate-based multi-VM blockchain, Astar nodes have all Polkadot or Substrate features. ",(0,s.jsx)(t.a,{href:"https://github.com/polkascan/py-substrate-interface",children:"Python Substrate Interface"})," library allows developers to query Substrate-runtime-level metadata from an Astar node and interact with the node's Polkadot or Substrate features, including querying and composing extrinsics using a native Python interface."]}),"\n",(0,s.jsx)(t.p,{children:"In this guide, we will cover:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"How to install Python Substrate Interface"}),"\n",(0,s.jsx)(t.li,{children:"How to create an API provider instance"}),"\n",(0,s.jsx)(t.li,{children:"How to query blocks and extrinsics, using an example of querying dApp staking participants\u2019 addresses."}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"what-is-substrate",children:"What is Substrate?"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://substrate.io/",children:"Substrate"})," is an open-source software development kit (SDK) that allows teams to quickly build highly customized blockchains. It comes with native support for connecting to Polkadot and Kusama right out of the box."]}),"\n",(0,s.jsx)(t.p,{children:"All Polkadot and Kusama parachains and relay chains are built with Substrate, this include Astar and Shiden networks. Thus, Astar nodes have all the major Polkadot or Substrate features."}),"\n",(0,s.jsx)(t.h2,{id:"what-is-substrate-python-interface",children:"What is Substrate Python Interface?"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://github.com/polkascan/py-substrate-interface",children:"Substrate Python Interface"})," is a Python library that specializes in interfacing with a Substrate node; querying storage, composing extrinsics, SCALE encoding/decoding, and providing additional convenience methods to deal with the features and metadata of the Substrate runtime."]}),"\n",(0,s.jsxs)(t.p,{children:["For interface function reference, please read ",(0,s.jsx)(t.a,{href:"https://polkascan.github.io/py-substrate-interface/",children:"https://polkascan.github.io/py-substrate-interface/"}),"."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"instructions",children:"Instructions"}),"\n",(0,s.jsx)(t.h3,{id:"1-install-substrate-python-interface",children:"1. Install Substrate Python Interface"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Before installing Substrate Python Interface, please run the following command to check if you have Python package installer ",(0,s.jsx)(t.a,{href:"https://pypi.org/project/pip/",children:(0,s.jsx)(t.code,{children:"pip"})})," installed:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:"pip --version\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["If not, please follow the guide at ",(0,s.jsx)(t.a,{href:"https://pip.pypa.io/en/stable/installation/",children:"https://pip.pypa.io/en/stable/installation/"})," to install ",(0,s.jsx)(t.code,{children:"pip"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["After making sure ",(0,s.jsx)(t.code,{children:"pip"})," is installed, you can install Python Substrate Interface library by running the following command in your project directory:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:"pip install substrate-interface\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"2-construct-an-api-provider-instance",children:"2. Construct an API provider Instance"}),"\n",(0,s.jsxs)(t.p,{children:["In order to query and interact with an Astar node, you need to first construct a\xa0",(0,s.jsx)(t.code,{children:"WsProvider"})," API provider using the WebSocket endpoint of Astar Network that you wish to interact with."]}),"\n",(0,s.jsxs)(t.p,{children:["You can find the list of supported endpoints from our ",(0,s.jsx)(t.a,{href:"/ja/docs/build/environment/endpoints",children:"network RPC endpoint list"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:'# Import Python Substrate Interface\nfrom substrateinterface import SubstrateInterface\n\n# Construct the API provider\nws_provider = SubstrateInterface(\n    url="wss://rpc.astar.network",\n)\n'})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"3-retrieve-blocks-and-extrinsics-using-py-substrate-interface",children:"3. Retrieve blocks and extrinsics using py-substrate-interface"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["For demonstration purposes, we will use JupyterLab in the guide. Please feel free to download and install JupyterLab following the tutorial ",(0,s.jsx)(t.a,{href:"https://docs.jupyter.org/en/latest/install.html",children:"here"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["To retrieve blocks and extrinsics in the blocks, you can use ",(0,s.jsx)(t.code,{children:"get_block"})," method defined in the ",(0,s.jsx)(t.code,{children:"py-substrate-interface"}),", which returns a Python dictionary containing extrinsics and metadata in a Substrate block."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'# Import Python Substrate Interface\nfrom substrateinterface import SubstrateInterface\n\n# Construct the API provider\nws_provider = SubstrateInterface(\n    url="wss://rpc.astar.network",\n)   \n\n# Retrieve the latest block\nblock = ws_provider.get_block()\n\n# Retrieve the latest finalized block\nblock = ws_provider.get_block_header(finalized_only = True)\n\n# Retrieve a block given its Substrate block hash\nblock_hash = "0xdd5d76dbea4cab627be320f363c6362adb1e3a5ed9bbe1b0ba4a0ac0bb028399"\nblock = ws_provider.get_block(block_hash=block_hash)\n\n# Retrieve a block given its Substrate block number\nblock_number = 2700136\nblock = ws_provider.get_block(block_number=block_number)\n'})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Below is an output example of querying the extrinsics and metadata of block #0 on Astar Network."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:"{'header': {'parentHash': '0x0000000000000000000000000000000000000000000000000000000000000000', 'number': 0, 'stateRoot': '0xc9451593261d67c47e14c5cbefeeffff5b5a1707cf81800becfc79e6df354da9', 'extrinsicsRoot': '0x03170a2e7597b7b7e3d84c05391d139a62b157e78786d8c082f29dcf4c111314', 'digest': {'logs': []}, 'hash': '0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'}, 'extrinsics': []}\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["You can find the reference to more methods in the Substrate Python Interface ",(0,s.jsx)(t.a,{href:"https://polkascan.github.io/py-substrate-interface/#substrateinterface.SubstrateInterface.get_block",children:"here"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"4-collect-the-addresses-participating-in-dapp-staking",children:"4. Collect the addresses participating in dApp staking"}),"\n",(0,s.jsxs)(t.p,{children:["In order to collect the addresses that participated in dApp staking during a certain period of time, we need to iterate through the Substrate blocks of Astar Network and iterate through the extrinsics inside each block to filter out the ",(0,s.jsx)(t.code,{children:"bond_and_stake"})," calls of ",(0,s.jsx)(t.code,{children:"dapp-staking-pallet"}),"."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"An example code:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# Import Python Substrate Interface\nfrom substrateinterface import SubstrateInterface\n\n# Construct the API provider\nws_provider = SubstrateInterface(\n    url=\"https://astar.api.onfinality.io/rpc?apikey=f4ccf3a8-4f71-40bf-aa21-1387919a2144\"\n)\n\n# Define the starting and ending block\nstart_block_number = 2536100\nend_block_number = 2536200\n\n# Iterate through the block and extrisics\nfor block_number in range(start_block_number, end_block_number):\n    block = ws_provider.get_block(block_number=block_number)\n    for extrinsic in block['extrinsics']:\n\t\t\t\t# Filter out the bond_and_stake calls\n        if extrinsic['call']['call_function'].name == 'bond_and_stake':\n            print(extrinsic['address'].value)\n            print(block_number)\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Below is the example output of the addresses participated in dApp staking during block #2536100 and block #2536200 and the corresponding block number containing the extrinsic."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Untitled",src:n(74123).Z+"",width:"1464",height:"672"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"faq",children:"FAQ"}),"\n",(0,s.jsxs)(t.p,{children:["For technical support, please contact our team of ambassadors and developers on ",(0,s.jsx)(t.a,{href:"https://discord.gg/AstarNetwork",children:"Discord"}),". We're happy to help."]}),"\n",(0,s.jsx)(t.h2,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/polkascan/py-substrate-interface",children:"Python Substrate Interface Github"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://polkascan.github.io/py-substrate-interface",children:"Python Substrate Interface Docs"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://polkascan.github.io/py-substrate-metadata-docs/",children:"Python Substrate Metadate Docs"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},74123:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/python0-1b780b2fd3b3812af8190fdbcdd211d6.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>a});var s=n(67294);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);