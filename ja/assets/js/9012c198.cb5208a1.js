"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[4007],{36174:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var i=t(85893),s=t(11151);const a={sidebar_position:1},o="Chain Extensions",c={id:"build/wasm/contract_environment/chain-extension/chain_extensions",title:"Chain Extensions",description:"Chain extension is a way to extend contracts API to add contracts to runtime pallet interaction. By default, contracts can only do cross-contract calls within their environment (pallet-contracts). Chain extension allows to add custom callable pallet functions.",source:"@site/docs/build/wasm/contract_environment/chain-extension/chain_extensions.md",sourceDirName:"build/wasm/contract_environment/chain-extension",slug:"/build/wasm/contract_environment/chain-extension/chain_extensions",permalink:"/ja/docs/build/wasm/contract_environment/chain-extension/chain_extensions",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/build/wasm/contract_environment/chain-extension/chain_extensions.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Contract Environment",permalink:"/ja/docs/build/wasm/contract_environment/"},next:{title:"Pallet-Assets Chain Extension",permalink:"/ja/docs/build/wasm/contract_environment/chain-extension/assets-ce"}},r={},l=[{value:"What chain extensions are available ?",id:"what-chain-extensions-are-available-",level:3},{value:"XVM",id:"xvm",level:4},{value:"Assets",id:"assets",level:4},{value:"Account Unification",id:"account-unification",level:4},{value:"Availability in networks",id:"availability-in-networks",level:3},{value:"Implementations",id:"implementations",level:3},{value:"Runtine",id:"runtine",level:4},{value:"ink! implementation",id:"ink-implementation",level:4},{value:"Contracts examples",id:"contracts-examples",level:4},{value:"Video tutorials",id:"video-tutorials",level:4}];function d(n){const e={a:"a",code:"code",h1:"h1",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"chain-extensions",children:"Chain Extensions"}),"\n",(0,i.jsx)(e.p,{children:"Chain extension is a way to extend contracts API to add contracts to runtime pallet interaction. By default, contracts can only do cross-contract calls within their environment (pallet-contracts). Chain extension allows to add custom callable pallet functions."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"ink-ce",src:t(28339).Z+"",width:"1200",height:"1025"})}),"\n",(0,i.jsx)(e.h3,{id:"what-chain-extensions-are-available-",children:"What chain extensions are available ?"}),"\n",(0,i.jsx)(e.h4,{id:"xvm",children:"XVM"}),"\n",(0,i.jsxs)(e.p,{children:["This chain extension enables usage of XVM in your contracts. More info in the ",(0,i.jsx)(e.a,{href:"https://github.com/AstarNetwork/ink-xvm-sdk",children:"ink! XVM SDK repo"}),"."]}),"\n",(0,i.jsx)(e.h4,{id:"assets",children:"Assets"}),"\n",(0,i.jsxs)(e.p,{children:["This chain extension adds call to ",(0,i.jsx)(e.code,{children:"pallet_assets"})," so that you can use Assets in your contracts. More info in the ",(0,i.jsx)(e.a,{href:"https://github.com/swanky-dapps/chain-extension-contracts",children:"chain-extensions contracts repo"}),"."]}),"\n",(0,i.jsx)(e.h4,{id:"account-unification",children:"Account Unification"}),"\n",(0,i.jsxs)(e.p,{children:["This chain extension adds query to ",(0,i.jsx)(e.code,{children:"pallet_unified_accounts"})," so that you can query Unified addresses. Find usage and tests in ",(0,i.jsx)(e.a,{href:"https://github.com/AstarNetwork/ink-xvm-sdk",children:"ink! XVM SDK repo"})]}),"\n",(0,i.jsx)(e.h3,{id:"availability-in-networks",children:"Availability in networks"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Chain extension"}),(0,i.jsx)(e.th,{children:"Shibuya"}),(0,i.jsx)(e.th,{children:"Shiden"}),(0,i.jsx)(e.th,{children:"Astar"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"XVM"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"\u2b1c"}),(0,i.jsx)(e.td,{children:"\u2b1c"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Assets"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"\u2705"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Account Unification"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"\u2b1c"}),(0,i.jsx)(e.td,{children:"\u2b1c"})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"implementations",children:"Implementations"}),"\n",(0,i.jsx)(e.p,{children:"There are two implementations: one in the runtime and one on the ink! side."}),"\n",(0,i.jsx)(e.h4,{id:"runtine",children:"Runtine"}),"\n",(0,i.jsxs)(e.p,{children:["Implementation of the chain extension on runtime side is available on ",(0,i.jsx)(e.a,{href:"https://github.com/AstarNetwork/Astar/tree/master/chain-extensions",children:"Astar repository"}),", under ",(0,i.jsx)(e.code,{children:"chain-extensions"})," folder"]}),"\n",(0,i.jsx)(e.h4,{id:"ink-implementation",children:"ink! implementation"}),"\n",(0,i.jsxs)(e.p,{children:["On contract side the implementation is made using ",(0,i.jsx)(e.a,{href:"https://github.com/paritytech/ink/blob/db7a906522a7e97ed5057b193df1253b33e99ee4/crates/env/src/chain_extension.rs#L77",children:"ChainExtensionMethod"})," that uses a custom environment\n(so it can be used with other libraries that use custom environment like OpenBrush). It is implemented as a crate that you can import in you contract. It can be found in ",(0,i.jsx)(e.a,{href:"https://github.com/swanky-dapps/chain-extension-contracts",children:"chain-extension contracts repository"})]}),"\n",(0,i.jsx)(e.h4,{id:"contracts-examples",children:"Contracts examples"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/AstarNetwork/chain-extension-contracts",children:"Asset Chain Extension"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/swanky-dapps/chain-extension-contracts/tree/main/examples/dapps-staking",children:"dApp Staking"})}),"\n"]}),"\n",(0,i.jsx)(e.h4,{id:"video-tutorials",children:"Video tutorials"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["dApp Staking Chain Extension on ink! Smart Contracts by @AstarNetwork on ",(0,i.jsx)(e.a,{href:"https://www.youtube.com/watch?v=-T-HKy_vFCo",children:"Youtube"})]}),"\n",(0,i.jsxs)(e.li,{children:["Build a Scheduler Chain Extension by @Parity on ",(0,i.jsx)(e.a,{href:"https://www.youtube.com/watch?v=yykPQF0tkqk",children:"Youtube"})]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},28339:(n,e,t)=>{t.d(e,{Z:()=>i});const i=t.p+"assets/images/ink-ce-8f94ddc20305ad60a4e91a5240c431df.png"},11151:(n,e,t)=>{t.d(e,{Z:()=>c,a:()=>o});var i=t(67294);const s={},a=i.createContext(s);function o(n){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);