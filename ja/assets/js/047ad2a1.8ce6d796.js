"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[7840],{1964:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var a=n(85893),t=n(11151),s=n(74866),l=n(85162);const o={sidebar_position:1},i="Binary",c={id:"build/nodes/archive-node/binary",title:"Binary",description:"In this guide, we will use the binary provided in Astar release.",source:"@site/docs/build/nodes/archive-node/binary.md",sourceDirName:"build/nodes/archive-node",slug:"/build/nodes/archive-node/binary",permalink:"/ja/docs/build/nodes/archive-node/binary",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/build/nodes/archive-node/binary.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Archive Node",permalink:"/ja/docs/build/nodes/archive-node/"},next:{title:"Docker",permalink:"/ja/docs/build/nodes/archive-node/docker"}},d={},u=[{value:"Let&#39;s get started",id:"lets-get-started",level:2},{value:"Create dedicated user and directory",id:"create-dedicated-user-and-directory",level:2},{value:"Set systemd service",id:"set-systemd-service",level:2},{value:"Service parameters",id:"service-parameters",level:2},{value:"Next steps",id:"next-steps",level:2},{value:"Extra operations",id:"extra-operations",level:2},{value:"Get node logs",id:"get-node-logs",level:3},{value:"Indexers and oracles",id:"indexers-and-oracles",level:3},{value:"Upgrade node",id:"upgrade-node",level:3},{value:"Purge node",id:"purge-node",level:3},{value:"Snapshot",id:"snapshot",level:3}];function h(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h1,{id:"binary",children:"Binary"}),"\n",(0,a.jsxs)(r.p,{children:["In this guide, we will use the binary provided in ",(0,a.jsx)(r.a,{href:"https://github.com/AstarNetwork/Astar",children:"Astar release"}),"."]}),"\n",(0,a.jsxs)(r.p,{children:["If you have experience with Rust compilation, you can also build the binary from ",(0,a.jsx)(r.a,{href:"https://github.com/astarnetwork/astar",children:"here"}),"."]}),"\n",(0,a.jsx)(r.h2,{id:"lets-get-started",children:"Let's get started"}),"\n",(0,a.jsx)(r.p,{children:"Let's start with updating our server. Connect to your server and update:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"sudo apt-get update\nsudo apt-get upgrade\nsudo apt install -y adduser libfontconfig1\n"})}),"\n",(0,a.jsx)(r.h2,{id:"create-dedicated-user-and-directory",children:"Create dedicated user and directory"}),"\n",(0,a.jsxs)(r.p,{children:["Download the ",(0,a.jsx)(r.a,{href:"https://github.com/AstarNetwork/Astar/releases/latest",children:"latest release"})," from Github:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:'wget $(curl -s https://api.github.com/repos/AstarNetwork/Astar/releases/latest | grep "tag_name" | awk \'{print "https://github.com/AstarNetwork/Astar/releases/download/" substr($2, 2, length($2)-3) "/astar-collator-v" substr($2, 3, length($2)-4) "-ubuntu-x86_64.tar.gz"}\')\ntar -xvf astar-collator*.tar.gz\n'})}),"\n",(0,a.jsxs)(r.p,{children:["Create a dedicated user for the node and move the ",(0,a.jsx)(r.strong,{children:"node binary"}),":"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"sudo useradd --no-create-home --shell /usr/sbin/nologin astar\nsudo mv ./astar-collator /usr/local/bin\nsudo chmod +x /usr/local/bin/astar-collator\n"})}),"\n",(0,a.jsxs)(r.p,{children:["Create a dedicated directory for the ",(0,a.jsx)(r.strong,{children:"chain storage data"}),":"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"sudo mkdir /var/lib/astar\nsudo chown astar:astar /var/lib/astar\n"})}),"\n",(0,a.jsx)(r.h2,{id:"set-systemd-service",children:"Set systemd service"}),"\n",(0,a.jsxs)(r.p,{children:["To run a stable collator node, a ",(0,a.jsx)(r.strong,{children:"systemd service"})," has to be set and activated. This will ensure that the node is restarting even after a server reboot."]}),"\n",(0,a.jsx)(r.p,{children:"Create a service file"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"sudo nano /etc/systemd/system/astar.service\n"})}),"\n",(0,a.jsx)(r.h2,{id:"service-parameters",children:"Service parameters"}),"\n",(0,a.jsx)(r.admonition,{type:"tip",children:(0,a.jsxs)(r.p,{children:["Please make sure to change ",(0,a.jsx)(r.strong,{children:"{NODE_NAME}"})]})}),"\n",(0,a.jsxs)(s.Z,{children:[(0,a.jsx)(l.Z,{value:"astar",label:"Astar",default:!0,children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"[Unit]\nDescription=Astar Archive node\n\n[Service]\nUser=astar\nGroup=astar\n  \nExecStart=/usr/local/bin/astar-collator \\\n  --pruning archive \\\n  --rpc-cors all \\\n  --name {NODE_NAME} \\\n  --chain astar \\\n  --base-path /var/lib/astar \\\n  --rpc-external \\\n  --rpc-methods Safe \\\n  --rpc-max-request-size 1 \\\n  --rpc-max-response-size 1 \\\n  --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0'\n\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n"})})}),(0,a.jsx)(l.Z,{value:"shiden",label:"Shiden",default:!0,children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"[Unit]\nDescription=Shiden Archive node\n\n[Service]\nUser=astar\nGroup=astar\n  \nExecStart=/usr/local/bin/astar-collator \\\n  --pruning archive \\\n  --rpc-cors all \\\n  --name {NODE_NAME} \\\n  --chain shiden \\\n  --base-path /var/lib/astar \\\n  --rpc-external \\\n  --rpc-methods Safe \\\n  --rpc-max-request-size 1 \\\n  --rpc-max-response-size 1 \\\n  --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0'\n\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n"})})}),(0,a.jsx)(l.Z,{value:"shibuya",label:"Shibuya",default:!0,children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"[Unit]\nDescription=Shibuya Archive node\n\n[Service]\nUser=astar\nGroup=astar\n  \nExecStart=/usr/local/bin/astar-collator \\\n  --pruning archive \\\n  --rpc-cors all \\\n  --name {NODE_NAME} \\\n  --chain shibuya \\\n  --base-path /var/lib/astar \\\n  --rpc-external \\\n  --rpc-methods Safe \\\n  --rpc-max-request-size 1 \\\n  --rpc-max-response-size 1 \\\n  --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0'\n\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n"})})})]}),"\n",(0,a.jsx)(r.admonition,{type:"important",children:(0,a.jsx)(r.p,{children:"EVM RPC calls are disabled by default, and require additional flag to be enabled. Please refer to this page (INSERT_LINK) for more info."})}),"\n",(0,a.jsx)(r.p,{children:"Start the service:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"sudo systemctl start astar.service\n"})}),"\n",(0,a.jsx)(r.p,{children:"Check the node log to ensure proper syncing:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"journalctl -f -u astar.service -n100\n"})}),"\n",(0,a.jsx)(r.p,{children:"Enable the service:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"sudo systemctl enable astar.service\n"})}),"\n",(0,a.jsx)(r.p,{children:"You can test the node health through the RPC port with this command:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:'curl -H "Content-Type: application/json" --data \'{ "jsonrpc":"2.0", "method":"system_health", "params":[],"id":1 }\' localhost:9944\n'})}),"\n",(0,a.jsx)(r.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,a.jsxs)(r.p,{children:["For any usage, wait for the chain to be fully sync by checking the ",(0,a.jsx)(r.a,{href:"/docs/build/nodes/archive-node/binary#get-node-logs",children:"node log"}),"."]}),"\n",(0,a.jsx)(r.p,{children:"It all depends on what you plan to do with your archive node."}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["In most cases, you will want to access node from outside. In this case, ",(0,a.jsx)(r.a,{href:"/docs/build/nodes/archive-node/nginx",children:"nginx server"})," is the recommended option."]}),"\n",(0,a.jsxs)(r.li,{children:["If you run your dApp on the same server as the node, then you can access it directly with the ",(0,a.jsx)(r.code,{children:"localhost"})," address. This setup is recommended for testing purpose only."]}),"\n",(0,a.jsxs)(r.li,{children:["If you run the node locally for testing purpose, you can switch the network in ",(0,a.jsx)(r.a,{href:"https://polkadot.js.org/apps",children:"Polkadot.js portal"})," and explore the chain:"]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.img,{alt:"1",src:n(66215).Z+"",width:"331",height:"528"})}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h2,{id:"extra-operations",children:"Extra operations"}),"\n",(0,a.jsx)(r.h3,{id:"get-node-logs",children:"Get node logs"}),"\n",(0,a.jsx)(r.p,{children:"To get the last 100 lines from the node logs, use the following command:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"journalctl -fu astar-collator -n100\n"})}),"\n",(0,a.jsx)(r.h3,{id:"indexers-and-oracles",children:"Indexers and oracles"}),"\n",(0,a.jsxs)(r.p,{children:["To access data from indexers (e.g. The Graph) or Oracles (e.g. Chainlink), you need to add the debug flags below to the node launch command, after the ",(0,a.jsx)(r.code,{children:"astar-collator"})," line:"]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.code,{children:"--ethapi=debug"})}),"\n",(0,a.jsx)(r.h3,{id:"upgrade-node",children:"Upgrade node"}),"\n",(0,a.jsx)(r.p,{children:"When an upgrade is necessary, node operators are be notified in our Discord and Element group."}),"\n",(0,a.jsxs)(r.p,{children:["Download the ",(0,a.jsx)(r.a,{href:"https://github.com/AstarNetwork/Astar/releases/latest",children:"latest release"})," from Github"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:'wget $(curl -s https://api.github.com/repos/AstarNetwork/Astar/releases/latest | grep "tag_name" | awk \'{print "https://github.com/AstarNetwork/Astar/releases/download/" substr($2, 2, length($2)-3) "/astar-collator-" substr($2, 3, length($2)-4) "-ubuntu-x86_64.tar.gz"}\')\ntar -xvf astar-collator*.tar.gz\n'})}),"\n",(0,a.jsx)(r.p,{children:"Move the new release binary and restart the service:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"sudo mv ./astar-collator /usr/local/bin\nsudo chmod +x /usr/local/bin/astar-collator\nsudo systemctl restart astar.service\n"})}),"\n",(0,a.jsx)(r.h3,{id:"purge-node",children:"Purge node"}),"\n",(0,a.jsx)(r.p,{children:"To start a node from scratch without any chain data, just wipe the chain data directory:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"sudo systemctl stop astar.service\nsudo rm -R /var/lib/astar/chains/astar/db*\nsudo systemctl start astar.service\n"})}),"\n",(0,a.jsx)(r.h3,{id:"snapshot",children:"Snapshot"}),"\n",(0,a.jsxs)(r.p,{children:["Please refer to the ",(0,a.jsx)(r.a,{href:"/docs/build/nodes/snapshots",children:(0,a.jsx)(r.strong,{children:"snapshot page"})}),".\n:::"]})]})}function p(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},85162:(e,r,n)=>{n.d(r,{Z:()=>l});n(67294);var a=n(86010);const t={tabItem:"tabItem_Ymn6"};var s=n(85893);function l(e){let{children:r,hidden:n,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.Z)(t.tabItem,l),hidden:n,children:r})}},74866:(e,r,n)=>{n.d(r,{Z:()=>w});var a=n(67294),t=n(86010),s=n(12466),l=n(16550),o=n(20469),i=n(91980),c=n(67392),d=n(50012);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:r,children:n}=e;return(0,a.useMemo)((()=>{const e=r??function(e){return u(e).map((e=>{let{props:{value:r,label:n,attributes:a,default:t}}=e;return{value:r,label:n,attributes:a,default:t}}))}(n);return function(e){const r=(0,c.l)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,n])}function p(e){let{value:r,tabValues:n}=e;return n.some((e=>e.value===r))}function m(e){let{queryString:r=!1,groupId:n}=e;const t=(0,l.k6)(),s=function(e){let{queryString:r=!1,groupId:n}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:r,groupId:n});return[(0,i._X)(s),(0,a.useCallback)((e=>{if(!s)return;const r=new URLSearchParams(t.location.search);r.set(s,e),t.replace({...t.location,search:r.toString()})}),[s,t])]}function g(e){const{defaultValue:r,queryString:n=!1,groupId:t}=e,s=h(e),[l,i]=(0,a.useState)((()=>function(e){let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!p({value:r,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:r,tabValues:s}))),[c,u]=m({queryString:n,groupId:t}),[g,b]=function(e){let{groupId:r}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(r),[t,s]=(0,d.Nk)(n);return[t,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:t}),x=(()=>{const e=c??g;return p({value:e,tabValues:s})?e:null})();(0,o.Z)((()=>{x&&i(x)}),[x]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,s]),tabValues:s}}var b=n(72389);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(85893);function f(e){let{className:r,block:n,selectedValue:a,selectValue:l,tabValues:o}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),d=e=>{const r=e.currentTarget,n=i.indexOf(r),t=o[n].value;t!==a&&(c(r),l(t))},u=e=>{let r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;r=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;r=i[n]??i[i.length-1];break}}r?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":n},r),children:o.map((e=>{let{value:r,label:n,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:a===r?0:-1,"aria-selected":a===r,ref:e=>i.push(e),onKeyDown:u,onClick:d,...s,className:(0,t.Z)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":a===r}),children:n??r},r)}))})}function j(e){let{lazy:r,children:n,selectedValue:t}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(r){const e=s.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((e,r)=>(0,a.cloneElement)(e,{key:r,hidden:e.props.value!==t})))})}function y(e){const r=g(e);return(0,v.jsxs)("div",{className:(0,t.Z)("tabs-container",x.tabList),children:[(0,v.jsx)(f,{...e,...r}),(0,v.jsx)(j,{...e,...r})]})}function w(e){const r=(0,b.Z)();return(0,v.jsx)(y,{...e,children:u(e.children)},String(r))}},66215:(e,r,n)=>{n.d(r,{Z:()=>a});const a=n.p+"assets/images/1-8e0f0b65e33be83e0e787d65faee3bf3.png"},11151:(e,r,n)=>{n.d(r,{Z:()=>o,a:()=>l});var a=n(67294);const t={},s=a.createContext(t);function l(e){const r=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(s.Provider,{value:r},e.children)}}}]);