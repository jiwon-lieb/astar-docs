"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[6200],{29122:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(85893),s=t(11151);const r={},a="Transfer native token",l={id:"build/EVM/precompiles/xcm/native-transfer",title:"Transfer native token",description:"Let's use transfer_multiasset to:",source:"@site/docs/build/EVM/precompiles/xcm/native-transfer.md",sourceDirName:"build/EVM/precompiles/xcm",slug:"/build/EVM/precompiles/xcm/native-transfer",permalink:"/docs/build/EVM/precompiles/xcm/native-transfer",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/build/EVM/precompiles/xcm/native-transfer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"XCM - xTokens",permalink:"/docs/build/EVM/precompiles/xcm/"},next:{title:"Transfer Asset",permalink:"/docs/build/EVM/precompiles/xcm/transfer-asssets"}},o={},c=[{value:"1. Define call as payable",id:"1-define-call-as-payable",level:4},{value:"2. Asset Multilocation",id:"2-asset-multilocation",level:4},{value:"3. Beneficiary Multilocation",id:"3-beneficiary-multilocation",level:4},{value:"4. Weight",id:"4-weight",level:4},{value:"5. calling XCM precompiles",id:"5-calling-xcm-precompiles",level:4}];function d(e){const n={a:"a",code:"code",h1:"h1",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"transfer-native-token",children:"Transfer native token"}),"\n",(0,i.jsxs)(n.p,{children:["Let's use ",(0,i.jsx)(n.code,{children:"transfer_multiasset"})," to:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["transfer native token of ",(0,i.jsx)(n.code,{children:"parachainId"})," ",(0,i.jsx)(n.strong,{children:"2000"})," to a Wrapped version in ",(0,i.jsx)(n.strong,{children:"2007"})]}),"\n",(0,i.jsxs)(n.li,{children:["for amount ",(0,i.jsx)(n.strong,{children:"10000000000000000000"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"1-define-call-as-payable",children:"1. Define call as payable"}),"\n",(0,i.jsx)(n.p,{children:"As the call will be on behalf of the contract, the native amount should be held by the contract. Please make the function payable to ensure the native token will be transferred to contract."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"    function transfer_native() external payable {\n"})}),"\n",(0,i.jsx)(n.h4,{id:"2-asset-multilocation",children:"2. Asset Multilocation"}),"\n",(0,i.jsxs)(n.p,{children:["The Native token Multilocation is defined by: ",(0,i.jsx)(n.code,{children:"Multilocation: { parents: 0, interior: Here }"}),"\nThe interior field is an empty bytes array (equivalent of ",(0,i.jsx)(n.code,{children:"Here"}),")."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"bytes[] memory interior1 = new bytes[](0);\nXCM.Multilocation memory asset = XCM.Multilocation({\n    parents: 0,\n    interior: interior1\n});\n"})}),"\n",(0,i.jsx)(n.h4,{id:"3-beneficiary-multilocation",children:"3. Beneficiary Multilocation"}),"\n",(0,i.jsxs)(n.p,{children:["Let's suppose the ",(0,i.jsx)(n.code,{children:"beneficiary"})," is the EVM address ",(0,i.jsx)(n.code,{children:"0xd43593c715fdd31c61141abd04a99fd6822c8558"})," of the contract in parachain ",(0,i.jsx)(n.strong,{children:"2007"}),". The Multilocation is ",(0,i.jsx)(n.code,{children:"{ parents: 1, interior: X2 [Parachain: 2007, AccountId20: { id: *caller address* , network: any }] }"}),".\nThe interior field is of type H160 (20 bytes EVM address) so prefixed with 0x03 and suffix with 0x00 (network: any). The interior bytes are 0x03 + EVM address + 0x00"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:'bytes[] memory interior = new bytes[](2);\ninterior[0] = bytes.concat(hex"00", bytes4(uint32(2007)));\ninterior[1] = bytes.concat(hex"03", msg.sender, hex"00");\nXCM.Multilocation memory destination = XCM.Multilocation({\n    parents: 1,\n    interior: interior\n});\n'})}),"\n",(0,i.jsx)(n.h4,{id:"4-weight",children:"4. Weight"}),"\n",(0,i.jsx)(n.p,{children:"The weight we want to buy in the destination chain, to set the weightlimit to Unlimited, you should use the value 0 for ref_time."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"XCM.WeightV2 memory weight = XCM.WeightV2({\n    ref_time: 30_000_000_000,\n    proof_size: 300_000\n});\n"})}),"\n",(0,i.jsx)(n.h4,{id:"5-calling-xcm-precompiles",children:"5. calling XCM precompiles"}),"\n",(0,i.jsx)(n.p,{children:"Import the XCM precompiles in your contract and call it like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:'address public constant XCM_ADDRESS =\n0x0000000000000000000000000000000000005004;\n\nrequire(\n    XCM(XCM_ADDRESS).transfer_multiasset(\n        asset,\n        amount,\n        destination,\n        weight\n    ),\n    "Failed to send xcm"\n);\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Please check full example in the ",(0,i.jsx)(n.a,{href:"https://github.com/AstarNetwork/EVM-XCM-Examples/tree/main/contracts/transfer-native",children:"XCM EVM SDK"})]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>a});var i=t(67294);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);