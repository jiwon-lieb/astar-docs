"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[7816],{64027:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var a=s(85893),n=s(11151),i=s(3837);const o={sidebar_position:2},r="Manage XC20 with MetaMask",c={id:"use/manage-assets/manage-xc20-with-metamask",title:"Manage XC20 with MetaMask",description:"Instructions",source:"@site/docs/use/manage-assets/manage-xc20-with-metamask.md",sourceDirName:"use/manage-assets",slug:"/use/manage-assets/manage-xc20-with-metamask",permalink:"/docs/use/manage-assets/manage-xc20-with-metamask",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/use/manage-assets/manage-xc20-with-metamask.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"XCM Transactions",permalink:"/docs/use/manage-assets/xcm-transactions"},next:{title:"Transfer tokens",permalink:"/docs/use/manage-assets/transfer-tokens"}},d={},l=[{value:"Instructions",id:"instructions",level:2},{value:"Visit the Portal",id:"visit-the-portal",level:3},{value:"Import assets to MetaMask",id:"import-assets-to-metamask",level:3}];function h(e){const t={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,n.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"manage-xc20-with-metamask",children:"Manage XC20 with MetaMask"}),"\n",(0,a.jsx)(t.h2,{id:"instructions",children:"Instructions"}),"\n",(0,a.jsx)(t.h3,{id:"visit-the-portal",children:"Visit the Portal"}),"\n",(0,a.jsxs)(t.p,{children:["Visit the ",(0,a.jsx)(t.a,{href:"https://portal.astar.network/assets",children:"Assets page"}),", and log in with your MetaMask account to view your assets."]}),"\n",(0,a.jsx)(i.Z,{src:s(52484).Z,width:"50%"}),"\n",(0,a.jsx)(t.p,{children:"As you can see in the screenshot above, there is DOT in our EVM wallet. Let's add the asset to MetaMask."}),"\n",(0,a.jsx)(t.h3,{id:"import-assets-to-metamask",children:"Import assets to MetaMask"}),"\n",(0,a.jsx)(t.p,{children:"Open MetaMask and connect the account with DOT. Make sure you are connected to the Astar Network. If not, you will find the Network Details in the Integration section."}),"\n",(0,a.jsxs)(t.p,{children:["After the account is connected, you will be able to import tokens into the wallet. Click on ",(0,a.jsx)(t.strong,{children:"Add to wallet"})," button in DOT row."]}),"\n",(0,a.jsx)(i.Z,{src:s(34471).Z,width:"100%"}),"\n",(0,a.jsxs)(t.p,{children:["Click on ",(0,a.jsx)(t.strong,{children:"Import Tokens"})," in MetaMask popup."]}),"\n",(0,a.jsx)(i.Z,{src:s(84585).Z,width:"100%"}),"\n",(0,a.jsxs)(t.p,{children:["When you are finished adding and importing DOT, you will see them in your wallet. You can find the full list of supported XCM assets ",(0,a.jsx)(t.a,{href:"/docs/learn/interoperability/xcm/asset-list",children:"here"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["To manually import assets that are not listed on the ",(0,a.jsx)(t.em,{children:"Assets page"}),", follow ",(0,a.jsx)(t.a,{href:"/docs/learn/interoperability/xcm/building-with-xcm/send-xc20-evm#import-assets-on-metamask",children:"this guide"}),"."]})]})}function m(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},3837:(e,t,s)=>{s.d(t,{Z:()=>n});s(67294);var a=s(85893);function n(e){let{src:t,caption:s,width:n="460px"}=e;return(0,a.jsxs)("center",{children:[(0,a.jsx)("br",{}),(0,a.jsxs)("figure",{children:[(0,a.jsx)("img",{src:t,alt:s,width:n}),(0,a.jsx)("figcaption",{children:s})]}),(0,a.jsx)("br",{})]})}},52484:(e,t,s)=>{s.d(t,{Z:()=>a});const a=s.p+"assets/images/XC20_EVM_1-97efa4cacd492e42f7d77a63d4e3ac33.png"},34471:(e,t,s)=>{s.d(t,{Z:()=>a});const a=s.p+"assets/images/XC20_EVM_2-9800cca6f056608b3fd2a85650bf38ec.png"},84585:(e,t,s)=>{s.d(t,{Z:()=>a});const a=s.p+"assets/images/XC20_EVM_3-e466091b6a4920f657b07f64e573d2ad.png"},11151:(e,t,s)=>{s.d(t,{Z:()=>r,a:()=>o});var a=s(67294);const n={},i=a.createContext(n);function o(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);