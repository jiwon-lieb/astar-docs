"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[5729],{31138:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var s=n(85893),o=n(11151);const i={},r="XC20",a={id:"build/EVM/precompiles/xc20",title:"XC20",description:"XC20 standard, created by the Moonbeam team, ensures compatibility between the EVM and Substrate framework that powers Polkadot via precompiles \u2014 special built-in smart contracts made to look like ERC20s. Calling functions on an XC20 invokes underlying Substrate functionality, which could be instructions to move tokens to another chain, or send them to another local address. This compatibility layer connects the world of EVM and smart contracts to advanced Substrate-based interoperability scenarios.",source:"@site/docs/build/EVM/precompiles/xc20.md",sourceDirName:"build/EVM/precompiles",slug:"/build/EVM/precompiles/xc20",permalink:"/docs/build/EVM/precompiles/xc20",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/build/EVM/precompiles/xc20.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Substrate ECDSA",permalink:"/docs/build/EVM/precompiles/substrate-ecdsa"},next:{title:"XVM",permalink:"/docs/build/EVM/precompiles/xvm"}},c={},l=[];function d(e){const t={a:"a",h1:"h1",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"xc20",children:"XC20"}),"\n",(0,s.jsx)(t.p,{children:"XC20 standard, created by the Moonbeam team, ensures compatibility between the EVM and Substrate framework that powers Polkadot via precompiles \u2014 special built-in smart contracts made to look like ERC20s. Calling functions on an XC20 invokes underlying Substrate functionality, which could be instructions to move tokens to another chain, or send them to another local address. This compatibility layer connects the world of EVM and smart contracts to advanced Substrate-based interoperability scenarios."}),"\n",(0,s.jsxs)(t.p,{children:["For XC20 overview see the following ",(0,s.jsx)(t.a,{href:"/docs/learn/interoperability/xcm/building-with-xcm/create-xc20-assets",children:"page"}),"."]}),"\n",(0,s.jsx)(t.h1,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/ethereum/EIPs/issues/20",children:"https://github.com/ethereum/EIPs/issues/20"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/OpenZeppelin/openzeppelin-contracts",children:"https://github.com/OpenZeppelin/openzeppelin-contracts"})}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>r});var s=n(67294);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);