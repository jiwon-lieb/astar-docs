"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[3983],{36691:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var s=t(85893),a=t(11151);const i={sidebar_position:5},l="Ask! Smart Contracts",r={id:"build/wasm/ask_contracts",title:"Ask! Smart Contracts",description:"Ask! eDSL has many limitations and issues",source:"@site/docs/build/wasm/ask_contracts.md",sourceDirName:"build/wasm",slug:"/build/wasm/ask_contracts",permalink:"/docs/build/wasm/ask_contracts",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/build/wasm/ask_contracts.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Ink! Development",permalink:"/docs/build/wasm/ink-dev"},next:{title:"Nodes Supporting Contracts",permalink:"/docs/build/wasm/nodes-clients"}},o={},c=[{value:"What will we do?",id:"what-will-we-do",level:2},{value:"What is Ask!?",id:"what-is-ask",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup Environment",id:"setup-environment",level:2},{value:"Install yarn package manager.",id:"install-yarn-package-manager",level:4},{value:"Clone the <code>ask-template</code> repo",id:"clone-the-ask-template-repo",level:4},{value:"Flipper Contract",id:"flipper-contract",level:2},{value:"<code>flipper.ts</code> file",id:"flipperts-file",level:3},{value:"Contract Structure",id:"contract-structure",level:3},{value:"Storage",id:"storage",level:4},{value:"Callable functions",id:"callable-functions",level:4},{value:"Events",id:"events",level:4},{value:"Build",id:"build",level:2},{value:"Deploy",id:"deploy",level:2},{value:"Reference",id:"reference",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"ask-smart-contracts",children:"Ask! Smart Contracts"}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["Ask! eDSL has many ",(0,s.jsx)(n.a,{href:"https://github.com/ask-lang/ask/issues/",children:"limitations and issues"}),"\nwhich are actively worked upon but at this moment it is not recommended\nfor ",(0,s.jsx)(n.strong,{children:"PRODUCTION"})," environment. Please consider ",(0,s.jsx)(n.a,{href:"dsls#ink",children:"ink!"})," if you are building a contract for production."]})}),"\n",(0,s.jsx)(n.p,{children:"This guide will help you set up your local environment and deploy a simple Ask! contract on our testnet, Shibuya."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"what-will-we-do",children:"What will we do?"}),"\n",(0,s.jsx)(n.p,{children:"We will setup the local environment for developing ask! smart contract and deploys it Shibuya Testnet."}),"\n",(0,s.jsx)(n.h2,{id:"what-is-ask",children:"What is Ask!?"}),"\n",(0,s.jsxs)(n.p,{children:["Ask! is a framework for AssemblyScript developers to write Wasm smart contracts for\xa0",(0,s.jsx)(n.code,{children:"pallet-contracts"}),", otherwise known as the Wasm Virtual Machine. Its syntax is similar to TypeScript. The ",(0,s.jsx)(n.a,{href:"https://polkadot.polkassembly.io/post/949",children:"current project"})," is funded by Polkadot treasury, and still under active development."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"This tutorial targets developers who are new to ask! and AssemblyScript.\nPrior knowledge of using/setting up typescript/javascript project is helpful but not needed."}),"\n",(0,s.jsx)(n.h2,{id:"setup-environment",children:"Setup Environment"}),"\n",(0,s.jsx)(n.h4,{id:"install-yarn-package-manager",children:"Install yarn package manager."}),"\n",(0,s.jsxs)(n.p,{children:["We will be using ",(0,s.jsx)(n.code,{children:"yarn"})," package manager to manage our ask! project. For installation instructions ",(0,s.jsx)(n.a,{href:"https://classic.yarnpkg.com/lang/en/docs/install",children:"read here"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npm install --global yarn\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"clone-the-ask-template-repo",children:["Clone the ",(0,s.jsx)(n.code,{children:"ask-template"})," repo"]}),"\n",(0,s.jsxs)(n.p,{children:["Simply clone the template provided by ask! team - ",(0,s.jsx)(n.code,{children:"ask-template"}),".\nExecute the below commands to clone the repository and cd into it."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/ask-lang/ask-template.git\ncd ask-template\n"})}),"\n",(0,s.jsx)(n.p,{children:"After executing above commands you will have a following project structure."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"ask-template\n\u251c\u2500\u2500 asconfig.json               (assemblyscript config)\n\u251c\u2500\u2500 askconfig.json              (ask-lang config)\n\u251c\u2500\u2500 build                       (build targets, configurable, see asconfig.json and askconfig.json)\n\u2502   \u2514\u2500\u2500 metadata.json           (Ask! contract metadata)\n\u251c\u2500\u2500 flipper.ts                  (Ask! contract code)\n\u251c\u2500\u2500 index.d.ts                  (typescript definition file, used for syntax and code hinting)\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 node_modules\n\u251c\u2500\u2500 package.json                (npm package config)\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 tsconfig.json               (typescript config)\n\u2514\u2500\u2500 yarn.lock\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The command above sets you a simple Ask! contract in ",(0,s.jsx)(n.code,{children:"flipper.ts"}),". You are good to go now!"]}),"\n",(0,s.jsx)(n.h2,{id:"flipper-contract",children:"Flipper Contract"}),"\n",(0,s.jsxs)(n.h3,{id:"flipperts-file",children:[(0,s.jsx)(n.code,{children:"flipper.ts"})," file"]}),"\n",(0,s.jsxs)(n.p,{children:["Below is the content of ",(0,s.jsx)(n.code,{children:"flipper.ts"})," file. It contains a very basic flipper contract which has only two contract methods, ",(0,s.jsx)(n.code,{children:"flip()"}),"\nand ",(0,s.jsx)(n.code,{children:"get()"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'/* eslint-disable @typescript-eslint/no-inferrable-types */\nimport { env, Pack } from "ask-lang";\n\n@event({ id: 1 })\nexport class FlipEvent {\n  flag: bool;\n\n  constructor(flag: bool) {\n    this.flag = flag;\n  }\n}\n\n@spreadLayout\n@packedLayout\nexport class Flipper {\n  flag: bool;\n  constructor(flag: bool = false) {\n    this.flag = flag;\n  }\n}\n\n@contract\nexport class Contract {\n  _data: Pack<Flipper>;\n\n  constructor() {\n    this._data = instantiate<Pack<Flipper>>(new Flipper(false));\n  }\n\n  get data(): Flipper {\n    return this._data.unwrap();\n  }\n\n  set data(data: Flipper) {\n    this._data = new Pack(data);\n  }\n\n  @constructor()\n  default(flag: bool): void {\n    this.data.flag = flag;\n  }\n\n  @message({ mutates: true })\n  flip(): void {\n    this.data.flag = !this.data.flag;\n    let event = new FlipEvent(this.data.flag);\n    // @ts-ignore\n    env().emitEvent(event);\n  }\n\n  @message()\n  get(): bool {\n    return this.data.flag;\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"contract-structure",children:"Contract Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/*\n * @event() is use to define Event, that can be emitted using env().emitEvent().\n */\n@event({ id: 1 })\nexport class FlipEvent {}\n\n/*\n * This is the smart contract storage\n */\n@spreadLayout\n@packedLayout\nexport class Flipper {}\n\n/*\n * @contract is use declare a smart contract, contains the functional logic.\n */\n@contract\nexport class Contract {}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"storage",children:"Storage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"@spreadLayout\n@packedLayout\nexport class Flipper {\n  flag: bool;\n  constructor(flag: bool = false) {\n    this.flag = flag;\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Flipper"})," class is our contract's storage. The ",(0,s.jsx)(n.code,{children:"@spreadLayout"})," and ",(0,s.jsx)(n.code,{children:"@packedLayout"})," are used to describe how it will\nbe stored internally, see for more details - ",(0,s.jsx)(n.a,{href:"https://use.ink/3.x/datastructures/spread-storage-layout",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"callable-functions",children:"Callable functions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"@contract\nexport class Contract {\n  @constructor()\n  default(flag: bool): void {}\n\n  @message({ mutates: true })\n  flip(): void {}\n\n  @message()\n  get(): bool {}\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"@constructor"})," - This is used for bootstrapping the initial contract state into the storage when contract is deployed for first time."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"@message()"})," - This marks a function as publicly dispatchable, meaning that it is exposed in the contract interface to the outside world."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"events",children:"Events"}),"\n",(0,s.jsxs)(n.p,{children:["Events in ask! are simple classes that are anointed with ",(0,s.jsx)(n.code,{children:"@event()"})," decorator with id specified."]}),"\n",(0,s.jsx)(n.p,{children:"Note:- No two events can have same id"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"@event({ id: 1 })\nexport class FlipEvent {\n  flag: bool;\n\n  constructor(flag: bool) {\n    this.flag = flag;\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"env().emitEvent()"})," is used to emit events in ask!, just like in ",(0,s.jsx)(n.code,{children:"flip()"})," method of contract."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"let event = new FlipEvent(this.data.flag);\n// @ts-ignore\nenv().emitEvent(event);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"build",children:"Build"}),"\n",(0,s.jsx)(n.p,{children:"Run the command below, which will build the template contract."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install dependencies and Build the template contract\nyarn && yarn build flipper.ts\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The above command will generate the Wasm code and metadata file for the contract in ",(0,s.jsx)(n.code,{children:"flipper.optimized.wasm"}),", and ",(0,s.jsx)(n.code,{children:"metadata.json"}),", respectively."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"ask-template\n\u251c\u2500\u2500 asconfig.json               (assemblyscript config)\n\u251c\u2500\u2500 askconfig.json              (ask-lang config)\n\u251c\u2500\u2500 build\n\u2502   \u2514\u2500\u2500 metadata.json           generated by Ask!, configurable by `askconfig.json`\n\u2502   \u2514\u2500\u2500 flipper.optimized.wasm  generated by AssemblyScript, configurable by `asconfig.json`\n\u2502   \u2514\u2500\u2500 flipper.wat             generated by AssemblyScript, configurable by `asconfig.json`\n"})}),"\n",(0,s.jsx)(n.h2,{id:"deploy",children:"Deploy"}),"\n",(0,s.jsx)(n.p,{children:"Now we will deploy this smart contract on our testnet."}),"\n",(0,s.jsxs)(n.p,{children:["We will access ",(0,s.jsx)(n.a,{href:"https://polkadot.js.org/apps/",children:"polkadot.js"})," and deploy the smart contract. Select Shibuya testnet and pick ",(0,s.jsx)(n.code,{children:"metadata.json"})," for \u201cjson for either ABI or .contract bundle\u201d section and pick ",(0,s.jsx)(n.code,{children:"flipper.optimized.wasm"})," for \u201ccompiled contract WASM\u201d section."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"09",src:t(5506).Z+"",width:"2738",height:"1052"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"10",src:t(9880).Z+"",width:"2462",height:"942"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"11",src:t(4414).Z+"",width:"2436",height:"1100"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"12",src:t(76227).Z+"",width:"2890",height:"972"})}),"\n",(0,s.jsx)(n.p,{children:"After following the steps above. We can confirm that the contract is deployed on Shibuya testnet."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"12",src:t(76227).Z+"",width:"2890",height:"972"})}),"\n",(0,s.jsxs)(n.p,{children:["That\u2019s a wrap!\nIf you have any questions, please feel free to ask us in our ",(0,s.jsx)(n.a,{href:"https://discord.gg/GhTvWxsF6S",children:"official discord channel"}),"."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/ask-lang/ask",children:"Official documentation for ask!"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},5506:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/09a-6c7d479ca121093ddc4f1efbe70a79e6.png"},9880:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/10-2f4cf80c9a9535917f06a47c56ec0081.png"},4414:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/11-c46e38f68a3d5371a4d33fb65e79af77.png"},76227:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/12-547e1acb378aedcb9677dbc91b4cc07b.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>l});var s=t(67294);const a={},i=s.createContext(a);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);