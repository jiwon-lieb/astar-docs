"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[2707],{84062:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=t(85893),r=t(11151);const o={sidebar_position:2},s="Verifiable Randomness Function",a={id:"build/wasm/contract_environment/vrf",title:"Verifiable Randomness Function",description:"Unfortunately at the moment there is no way to generate randomness using ink!",source:"@site/docs/build/wasm/contract_environment/vrf.md",sourceDirName:"build/wasm/contract_environment",slug:"/build/wasm/contract_environment/vrf",permalink:"/docs/build/wasm/contract_environment/vrf",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/build/wasm/contract_environment/vrf.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Contract Verification",permalink:"/docs/build/wasm/contract_environment/verification"},next:{title:"Interact with Wasm Smart Contract",permalink:"/docs/build/wasm/interact/"}},c={},l=[];function d(n){const e={h1:"h1",li:"li",p:"p",ul:"ul",...(0,r.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"verifiable-randomness-function",children:"Verifiable Randomness Function"}),"\n",(0,i.jsx)(e.p,{children:"Unfortunately at the moment there is no way to generate randomness using ink!\nThe available options are:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Creating a VRF oracle contract that will generate randomness.","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(DIA is working on it for Astar.)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["On the runtime level, adding a Chain Extension to the RandomnessCollectiveFlip pallet so it's accessible within ink! contracts.","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Astar team is working on this."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"Add a function in the ink_env to retrieve the current and previous block hashes, on which to base randomness."}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>a,a:()=>s});var i=t(67294);const r={},o=i.createContext(r);function s(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);