"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[7736],{8697:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var s=r(85893),a=r(11151),n=r(74866),o=r(85162);const i={sidebar_position:1},l="Block Explorers",c={id:"build/wasm/contract_environment/explorers",title:"Block Explorers",description:"Overview",source:"@site/docs/build/wasm/contract_environment/explorers.md",sourceDirName:"build/wasm/contract_environment",slug:"/build/wasm/contract_environment/explorers",permalink:"/es/docs/build/wasm/contract_environment/explorers",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/build/wasm/contract_environment/explorers.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Pallet-Assets Chain Extension",permalink:"/es/docs/build/wasm/contract_environment/chain-extension/assets-ce"},next:{title:"Contract Verification",permalink:"/es/docs/build/wasm/contract_environment/verification"}},u={},d=[{value:"Overview",id:"overview",level:2},{value:"Native Astar Explorers",id:"native-astar-explorers",level:2}];function h(e){const t={a:"a",h1:"h1",h2:"h2",p:"p",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"block-explorers",children:"Block Explorers"}),"\n",(0,s.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(t.p,{children:"Block explorers are the Google for searching data on a blockchain. They give developers and users the ability to search information such as balances, contracts, tokens, transactions, and API services."}),"\n",(0,s.jsx)(t.h2,{id:"native-astar-explorers",children:"Native Astar Explorers"}),"\n",(0,s.jsxs)(n.Z,{children:[(0,s.jsxs)(o.Z,{value:"astar",label:"Astar Network",default:!0,children:[(0,s.jsx)("p",{children:"Subscan is the most widely used explorer in the Polkadot ecosystem. Subscan has indexed Astar Network in its entirety, and supports both Substrate and Ethereum APIs. BlockScout is the best explorer for developers who are building on Astar EVM, as it has all the features of EtherScan."}),(0,s.jsx)("p",{children:"Under certain circumstances, the Polkadot.js apps portal may also be used to explore blocks."}),(0,s.jsxs)("p",{children:[(0,s.jsx)("b",{children:"Subscan:"})," ",(0,s.jsx)("a",{href:"https://astar.subscan.io",children:(0,s.jsx)(t.a,{href:"https://astar.subscan.io",children:"https://astar.subscan.io"})})]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("b",{children:"Polkadot JS:"})," ",(0,s.jsx)("a",{href:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fastar.api.onfinality.io%2Fpublic-ws#/explorer",children:(0,s.jsx)(t.a,{href:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fastar.api.onfinality.io%2Fpublic-ws#/explorer",children:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fastar.api.onfinality.io%2Fpublic-ws#/explorer"})})]})]}),(0,s.jsxs)(o.Z,{value:"shiden",label:"Shiden Network",children:[(0,s.jsx)("p",{children:"Subscan is the most used explorer in the Polkadot ecosystem. With Subscan you can search the complete Astar Network. Subscan support Substrate and Ethereum API. BlockScout is the best explorer for developers who are building on Astar EVM, as it has all the features of EtherScan."}),(0,s.jsx)("p",{children:"Under certain circumstances, the Polkadot.js apps portal may also be used to explore blocks."}),(0,s.jsxs)("p",{children:[(0,s.jsx)("b",{children:"Subscan:"})," ",(0,s.jsx)("a",{href:"https://shiden.subscan.io",children:(0,s.jsx)(t.a,{href:"https://shiden.subscan.io",children:"https://shiden.subscan.io"})})]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("b",{children:"Polkadot JS:"})," ",(0,s.jsx)("a",{href:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fshiden.api.onfinality.io%2Fpublic-ws#/explorer",children:(0,s.jsx)(t.a,{href:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fshiden.api.onfinality.io%2Fpublic-ws#/explorer",children:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fshiden.api.onfinality.io%2Fpublic-ws#/explorer"})})]})]}),(0,s.jsxs)(o.Z,{value:"shibuya",label:"Shibuya Network",children:[(0,s.jsx)("p",{children:"Subscan is the most used explorer in the Polkadot ecosystem. With Subscan you can search the complete Astar Network. Subscan support Substrate and Ethereum API. BlockScout is the best explorer for developers who are building on Astar EVM, as it has all the features of EtherScan."}),(0,s.jsxs)("p",{children:["Sirato is a contract explorer for ink! smart contracts. Sirato provides a contract verification service enabling users to decode information about contract code and instances that have been deployed using the Contracts Pallet. The service allows users to upload source code and metadata to the service which will verify it matches the on-chain. For instructions on how to use the service you can refer ",(0,s.jsx)("a",{href:"https://medium.com/sirato/how-to-verify-ink-smart-contracts-83fec5de81aa",children:"here"}),"."]}),(0,s.jsx)("p",{children:"Under certain circumstances, the Polkadot.js apps portal may also be used to explore blocks."}),(0,s.jsxs)("p",{children:[(0,s.jsx)("b",{children:"Subscan:"})," ",(0,s.jsx)("a",{href:"https://shibuya.subscan.io",children:(0,s.jsx)(t.a,{href:"https://shibuya.subscan.io",children:"https://shibuya.subscan.io"})})]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("b",{children:"Sirato:"})," ",(0,s.jsx)("a",{href:"https://shibuya.sirato.xyz/",children:(0,s.jsx)(t.a,{href:"https://shibuya.sirato.xyz/",children:"https://shibuya.sirato.xyz/"})})]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("b",{children:"Polkadot JS:"})," ",(0,s.jsx)("a",{href:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc.shibuya.astar.network#/explorer",children:(0,s.jsx)(t.a,{href:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc.shibuya.astar.network#/explorer",children:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc.shibuya.astar.network#/explorer"})})]})]})]}),"\n",(0,s.jsxs)(t.p,{children:["Visit the Subscan ",(0,s.jsx)(t.a,{href:"/docs/build/integrations/indexers/subscan",children:"tutorial page"})," for more information."]})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},85162:(e,t,r)=>{r.d(t,{Z:()=>o});r(67294);var s=r(86010);const a={tabItem:"tabItem_Ymn6"};var n=r(85893);function o(e){let{children:t,hidden:r,className:o}=e;return(0,n.jsx)("div",{role:"tabpanel",className:(0,s.Z)(a.tabItem,o),hidden:r,children:t})}},74866:(e,t,r)=>{r.d(t,{Z:()=>y});var s=r(67294),a=r(86010),n=r(12466),o=r(16550),i=r(20469),l=r(91980),c=r(67392),u=r(50012);function d(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:r}=e;return(0,s.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:r,attributes:s,default:a}}=e;return{value:t,label:r,attributes:s,default:a}}))}(r);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function p(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:r}=e;const a=(0,o.k6)(),n=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,l._X)(n),(0,s.useCallback)((e=>{if(!n)return;const t=new URLSearchParams(a.location.search);t.set(n,e),a.replace({...a.location,search:t.toString()})}),[n,a])]}function f(e){const{defaultValue:t,queryString:r=!1,groupId:a}=e,n=h(e),[o,l]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const s=r.find((e=>e.default))??r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:n}))),[c,d]=b({queryString:r,groupId:a}),[f,m]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,n]=(0,u.Nk)(r);return[a,(0,s.useCallback)((e=>{r&&n.set(e)}),[r,n])]}({groupId:a}),x=(()=>{const e=c??f;return p({value:e,tabValues:n})?e:null})();(0,i.Z)((()=>{x&&l(x)}),[x]);return{selectedValue:o,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:n}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),m(e)}),[d,m,n]),tabValues:n}}var m=r(72389);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(85893);function j(e){let{className:t,block:r,selectedValue:s,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,n.o5)(),u=e=>{const t=e.currentTarget,r=l.indexOf(t),a=i[r].value;a!==s&&(c(t),o(a))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;t=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;t=l[r]??l[l.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":r},t),children:i.map((e=>{let{value:t,label:r,attributes:n}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>l.push(e),onKeyDown:d,onClick:u,...n,className:(0,a.Z)("tabs__item",x.tabItem,n?.className,{"tabs__item--active":s===t}),children:r??t},t)}))})}function w(e){let{lazy:t,children:r,selectedValue:a}=e;const n=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=n.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:n.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function k(e){const t=f(e);return(0,v.jsxs)("div",{className:(0,a.Z)("tabs-container",x.tabList),children:[(0,v.jsx)(j,{...e,...t}),(0,v.jsx)(w,{...e,...t})]})}function y(e){const t=(0,m.Z)();return(0,v.jsx)(k,{...e,children:d(e.children)},String(t))}},11151:(e,t,r)=>{r.d(t,{Z:()=>i,a:()=>o});var s=r(67294);const a={},n=s.createContext(a);function o(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);