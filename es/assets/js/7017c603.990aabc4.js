"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[5222],{42571:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=n(85893),i=n(11151);const r={sidebar_position:1},t="Transacciones XCM nativas",c={id:"learn/interoperability/xcm/building-with-xcm/native-transactions",title:"Transacciones XCM nativas",description:"Vamos a examinar c\xf3mo tranferir activos nativos en Relay Chain (DOT o KSM) a Astar o Shiden.",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/learn/interoperability/xcm/building-with-xcm/native-transactions.md",sourceDirName:"learn/interoperability/xcm/building-with-xcm",slug:"/learn/interoperability/xcm/building-with-xcm/native-transactions",permalink:"/es/docs/learn/interoperability/xcm/building-with-xcm/native-transactions",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/learn/interoperability/xcm/building-with-xcm/native-transactions.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Construyendo con XCM",permalink:"/es/docs/learn/interoperability/xcm/building-with-xcm/"},next:{title:"Crear activos XC20",permalink:"/es/docs/learn/interoperability/xcm/building-with-xcm/create-xc20-assets"}},o={},d=[{value:"En la pr\xe1ctica",id:"en-la-pr\xe1ctica",level:2}];function l(e){const a={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"transacciones-xcm-nativas",children:"Transacciones XCM nativas"}),"\n",(0,s.jsx)(a.p,{children:"Vamos a examinar c\xf3mo tranferir activos nativos en Relay Chain (DOT o KSM) a Astar o Shiden."}),"\n",(0,s.jsx)(a.p,{children:"Para esta demostraci\xf3n estaremos usando el portal de Polkadot.js. Los usuarios habituales interactuar\xe1n a trav\xe9s de nuestro portal, donde toda esta complejidad permanecer\xe1 abstracta."}),"\n",(0,s.jsxs)(a.p,{children:["En esta demostraci\xf3n, vamos a transferir tokens ",(0,s.jsx)(a.strong,{children:"KSM"})," de Kusama a la red Shiden."]}),"\n",(0,s.jsx)(a.h2,{id:"en-la-pr\xe1ctica",children:"En la pr\xe1ctica"}),"\n",(0,s.jsxs)(a.p,{children:["Estaremos usando chopsticks para esta demostraci\xf3n (m\xe1s informaci\xf3n en la ",(0,s.jsx)(a.a,{href:"/es/docs/build/environment/chopsticks",children:"p\xe1gina de chopsticks"}),").\nEste comando generar\xe1 una red de chopsticks que replicar\xe1 el estado actual de la relay-chain de Kusama y la parachain de Shiden, permitiendo XCM:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"npx @acala-network/chopsticks@latest xcm -r kusama -p shiden\n"})}),"\n",(0,s.jsxs)(a.p,{children:["El activo nativo en Relay Chain est\xe1 representado en Astar o Shiden por el id de activo ",(0,s.jsx)(a.code,{children:"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"})," o ",(0,s.jsx)(a.code,{children:"340282366920938463463374607431768211455"})," en decimal."]}),"\n",(0,s.jsxs)(a.p,{children:["En el ",(0,s.jsx)(a.a,{href:"https://github.com/AcalaNetwork/chopsticks/blob/97b42a16d9f3fb32069eb2c19e05d7b80e250c3c/configs/shiden.yml#L25",children:"archivo de configuraciones"})," de chopsticks de Shiden, Alice tiene 100000KSM"]}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{alt:"1",src:n(80635).Z+"",width:"2096",height:"348"})}),"\n",(0,s.jsxs)(a.p,{children:["Vamos a transferir algo de ",(0,s.jsx)(a.strong,{children:"KSM"})," de Kusama a Shiden usando Alice."]}),"\n",(0,s.jsxs)(a.p,{children:["Este ser\xe1 un ejemplo del uso del protocolo VMP o DMP para ser m\xe1s espec\xedficos. Haremos uso de la funcionalidad ",(0,s.jsx)(a.code,{children:"reserve_transfer_asset"}),". Esto consiste en trasladar activos de una blockchain a otra a trav\xe9s de una cuenta ",(0,s.jsx)(a.em,{children:"soberana"})," intermediaria. En el proceso, los activos de la cadena de origen no se destruir\xe1n, sino que el ",(0,s.jsx)(a.em,{children:"Soberano"})," los conservar\xe1, mientras que la cadena de destino acu\xf1ar\xe1 versiones envueltas y las depositar\xe1 en la direcci\xf3n de destino."]}),"\n",(0,s.jsxs)(a.p,{children:["La cuenta ",(0,s.jsx)(a.em,{children:"Soberana"})," garantiza que los mismos activos no puedan utilizarse simult\xe1neamente en ambas cadenas. Tambi\xe9n garantiza que los activos envueltos sean intercambiables con los activos de la cadena de origen."]}),"\n",(0,s.jsxs)(a.p,{children:["Alice quiere enviarse algunos tokens a s\xed misma en la Red Shiden, as\xed que prepara una llamada ",(0,s.jsx)(a.code,{children:"reserve_transfer_asset"})," en la Relay Chain. Los par\xe1metros lucen as\xed:"]}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{alt:"Mensaje XCM para enviar KSM de Kusama a Shiden v\xeda reserveAssetTransfer",src:n(78518).Z+"",width:"2746",height:"2340"})}),"\n",(0,s.jsx)(a.p,{children:"Debemos especificar:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["Destino","\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["Utilizando la notaci\xf3n MultiLocation, describimos la cadena de destino, que es Shiden, como ",(0,s.jsx)(a.code,{children:"/Parachain(2007)"}),". La notaci\xf3n se asemeja a las rutas de los sistemas de archivos en los que se considera que la Relay Chain es la ra\xedz."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["Beneficiario","\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["Una vez m\xe1s, utilizando la notaci\xf3n ",(0,s.jsx)(a.em,{children:"MultiLocation"}),", describimos al beneficiario de la transferencia de activos. Tenga en cuenta que este es el contexto de la cadena de destino. Estamos transfiriendo a Alice cuya direcci\xf3n es ",(0,s.jsx)(a.code,{children:"ajYMsCKsEAhEvHpeA4XqsfiA9v1CdzZPrCfS6pEfeGHW9j8"})," en Shiden. Pero en lugar de especificar la direcci\xf3n Shiden, especificaremos el ID de cuenta (o clave p\xfablica) asociado a esta direcci\xf3n: ",(0,s.jsx)(a.code,{children:"0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["Activos siendo transferidos","\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["Finalmente, describimos los activos que est\xe1n siendo transferidos. Dado que estamos transfiriendo activos nativos de la Relay Chain, especificamos que se trata de ",(0,s.jsx)(a.strong,{children:"activos concretos"})," y que su ubicaci\xf3n es ",(0,s.jsx)(a.strong,{children:"Here"})," en el contexto de la Relay Chain. El activo es fungible, por lo tanto necesitamos especificar la cantidad que se transfiere, en este caso, un total de ",(0,s.jsx)(a.strong,{children:"1000000000"})," tokens."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Despu\xe9s de iniciar la transferencia, podemos observar qu\xe9 pasa en la Relay Chain:"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{alt:"Se intent\xf3 ejecutar un mensaje XCM y se transfirieron fondos de Alice a la cuenta Soverana.",src:n(47394).Z+"",width:"992",height:"668"})}),"\n",(0,s.jsx)(a.p,{children:"Se intent\xf3 ejecutar un mensaje XCM y se transfirieron fondos de Alice a la cuenta Soverana."}),"\n",(0,s.jsx)(a.p,{children:"En el lado de Shiden, podemos observar lo siguiente:"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{alt:"4",src:n(61009).Z+"",width:"997",height:"1195"})}),"\n",(0,s.jsxs)(a.p,{children:["El mensaje XCM ha sido recibido y ejecutadas las instrucciones. Como resultado, se ha acu\xf1ado un activo con Id ",(0,s.jsx)(a.code,{children:"340282366920938463463374607431768211455"}),", un total de ",(0,s.jsx)(a.strong,{children:"996000000"})," tokens. Estos tokens han sido depositados en la cuenta de destino."]}),"\n",(0,s.jsxs)(a.p,{children:["Tenga en cuenta que la cantidad recibida es inferior a la enviada originalmente. Esto es porque ",(0,s.jsx)(a.strong,{children:"4000000"})," han sido utilizados para pagar la comisi\xf3n de la transacci\xf3n en la cadena destino."]}),"\n",(0,s.jsxs)(a.p,{children:["\xa1Hemos transferido con \xe9xito los activos ",(0,s.jsx)(a.strong,{children:"KSM"})," de Kusama a Shiden!"]})]})}function h(e={}){const{wrapper:a}={...(0,i.a)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},80635:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/1-8da5d9e4ff315f469547f5996fbf1d16.png"},78518:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/2-05a1709c44e87df9c5156c0136f55f60.png"},47394:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/3-0339bae29bbcc6d10bf199b4459e6167.png"},61009:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/4-e429b5f311e21832c26d68b12f526d1f.png"},11151:(e,a,n)=>{n.d(a,{Z:()=>c,a:()=>t});var s=n(67294);const i={},r=s.createContext(i);function t(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);