"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[4857],{36565:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var t=r(85893),s=r(11151);const i={},o="Openbrush Wizard",l={id:"build/wasm/from-zero-to-ink-hero/nft/Wizard/wizard",title:"Openbrush Wizard",description:"Use the Wizard to generate generic PSP34 code",source:"@site/docs/build/wasm/from-zero-to-ink-hero/nft/Wizard/wizard.md",sourceDirName:"build/wasm/from-zero-to-ink-hero/nft/Wizard",slug:"/build/wasm/from-zero-to-ink-hero/nft/Wizard/",permalink:"/es/docs/build/wasm/from-zero-to-ink-hero/nft/Wizard/",draft:!1,unlisted:!1,editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/build/wasm/from-zero-to-ink-hero/nft/Wizard/wizard.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"NFT Contract with PSP34",permalink:"/es/docs/build/wasm/from-zero-to-ink-hero/nft/"},next:{title:"Override mint() Method",permalink:"/es/docs/build/wasm/from-zero-to-ink-hero/nft/Override/"}},c={},a=[{value:"Use the Wizard to generate generic PSP34 code",id:"use-the-wizard-to-generate-generic-psp34-code",level:2},{value:"Examine Openbrush Traits",id:"examine-openbrush-traits",level:2},{value:"Build, Deploy and Interact with the Contract",id:"build-deploy-and-interact-with-the-contract",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"openbrush-wizard",children:"Openbrush Wizard"}),"\n",(0,t.jsx)(n.h2,{id:"use-the-wizard-to-generate-generic-psp34-code",children:"Use the Wizard to generate generic PSP34 code"}),"\n",(0,t.jsx)(n.p,{children:"To create a smart contract which follows PSP34 standard use Openbrush Wizard:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Open ",(0,t.jsx)(n.a,{href:"https://openbrush.io/",children:"Openbrush.io"})," website and go to bottom of the page."]}),"\n",(0,t.jsx)(n.li,{children:"Select PSP34."}),"\n",(0,t.jsxs)(n.li,{children:["Select the version to match the rest of the tutorial. Check ",(0,t.jsx)(n.em,{children:"What will be used"})," in the ",(0,t.jsx)(n.a,{href:"/docs/build/wasm/from-zero-to-ink-hero/nft/#what-will-be-used",children:"opening chapter"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Name your contract. In this tutorial we will use ",(0,t.jsx)(n.code,{children:"Shiden34"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Add your symbol name. In this tutorial we will use ",(0,t.jsx)(n.code,{children:"SH34"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Select extensions: ",(0,t.jsx)(n.em,{children:"Metadata"}),", ",(0,t.jsx)(n.em,{children:"Mintable"}),", ",(0,t.jsx)(n.em,{children:"Enumerable"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Under Security pick ",(0,t.jsx)(n.em,{children:"Ownable"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Copy ",(0,t.jsx)(n.code,{children:"lib.rs"})," and ",(0,t.jsx)(n.code,{children:"Cargo.toml"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"At the time of writing this tutorial, Openbrush wizard does not properly generate contract. Use code from this tutorial."})}),"\n",(0,t.jsxs)(n.p,{children:["Your ",(0,t.jsx)(n.code,{children:"lib.rs"})," file should look like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'#![cfg_attr(not(feature = "std"), no_std, no_main)]\n\n#[openbrush::implementation(PSP34, Ownable, PSP34Enumerable, PSP34Metadata, PSP34Mintable)]\n#[openbrush::contract]\npub mod shiden34 {\n    use openbrush::traits::Storage;\n\n    #[ink(storage)]\n    #[derive(Default, Storage)]\n    pub struct Shiden34 {\n        #[storage_field]\n        psp34: psp34::Data,\n        #[storage_field]\n        ownable: ownable::Data,\n        #[storage_field]\n        metadata: metadata::Data,\n        #[storage_field]\n        enumerable: enumerable::Data,\n    }\n\n    #[overrider(PSP34Mintable)]\n    #[openbrush::modifiers(only_owner)]\n    fn mint(&mut self, account: AccountId, id: Id) -> Result<(), PSP34Error> {\n        psp34::InternalImpl::_mint_to(self, account, id)\n    }\n\n    impl Shiden34 {\n        #[ink(constructor)]\n        pub fn new() -> Self {\n            let mut _instance = Self::default();\n            ownable::Internal::_init_with_owner(&mut _instance, Self::env().caller());\n            psp34::Internal::_mint_to(&mut _instance, Self::env().caller(), Id::U8(1))\n                .expect("Can mint");\n            let collection_id = psp34::PSP34Impl::collection_id(&_instance);\n            metadata::Internal::_set_attribute(\n                &mut _instance,\n                collection_id.clone(),\n                String::from("name"),\n                String::from("Shiden34"),\n            );\n            metadata::Internal::_set_attribute(\n                &mut _instance,\n                collection_id,\n                String::from("symbol"),\n                String::from("SH34"),\n            );\n            _instance\n        }\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Your ",(0,t.jsx)(n.code,{children:"Cargo.toml"})," should now look like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[package]\nname = "shiden34"\nversion = "3.1.0"\nauthors = ["Astar builder"]\nedition = "2021"\n\n[dependencies]\nink = { version = "4.2.1", default-features = false }\nscale = { package = "parity-scale-codec", version = "3", default-features = false, features = ["derive"] }\nscale-info = { version = "2.6", default-features = false, features = ["derive"], optional = true }\nopenbrush = { tag = "v4.0.0-beta", git = "https://github.com/Brushfam/openbrush-contracts", default-features = false, features = ["psp34", "ownable"] }\n\n[lib]\npath = "lib.rs"\n\n[features]\ndefault = ["std"]\nstd = [\n    "ink/std",\n    "scale/std",\n    "scale-info/std",\n\n    "openbrush/std",\n]\nink-as-dependency = []\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Make the folder structure or use ",(0,t.jsx)(n.code,{children:"Swanky-cli"})," like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:".\n\u2514\u2500\u2500 contracts\n    \u2514\u2500\u2500 shiden34\n        \u251c\u2500\u2500 Cargo.toml\n        \u2514\u2500\u2500 lib.rs\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Add another ",(0,t.jsx)(n.code,{children:"Cargo.toml"})," with workspace definition to your project's root folder:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[workspace]\nmembers = [\n    "contracts/**",\n]\n\nexclude = [\n]\n'})}),"\n",(0,t.jsx)(n.p,{children:"And your folder structure will look like:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cargo",children:".\n\u251c\u2500\u2500 Cargo.toml\n\u2514\u2500\u2500 contracts\n    \u2514\u2500\u2500 shiden34\n        \u251c\u2500\u2500 Cargo.toml\n        \u2514\u2500\u2500 lib.rs\n"})}),"\n",(0,t.jsx)(n.p,{children:"You are now ready to check if all is set.\nRun in root project folder:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cargo check\n"})}),"\n",(0,t.jsx)(n.h2,{id:"examine-openbrush-traits",children:"Examine Openbrush Traits"}),"\n",(0,t.jsxs)(n.p,{children:["Let's examine what we have inside module ",(0,t.jsx)(n.code,{children:"shiden34"})," (lib.rs) so far:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Defined structure ",(0,t.jsx)(n.code,{children:"Shiden34"})," for contract storage."]}),"\n",(0,t.jsxs)(n.li,{children:["Implemented constructor ",(0,t.jsx)(n.code,{children:"new()"})," for ",(0,t.jsx)(n.code,{children:"Shiden34"})," structure."]}),"\n",(0,t.jsxs)(n.li,{children:["Implemented Openbrush traits ",(0,t.jsx)(n.em,{children:"PSP34, PSP34Metadata, PSP34Mintable, PSP34Enumberable, Ownable"})," for structure ",(0,t.jsx)(n.code,{children:"Shiden34"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Overridden ",(0,t.jsx)(n.code,{children:"mint()"})," method from trait ",(0,t.jsx)(n.em,{children:"PSP34Mintable"}),". More about this in next section."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Each of implemented traits will enrich ",(0,t.jsx)(n.code,{children:"shiden34"})," contract with a set of methods. To examine which methods you now have available check:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Openbrush ",(0,t.jsx)(n.a,{href:"https://github.com/Supercolony-net/openbrush-contracts/blob/main/contracts/src/traits/psp34/psp34.rs",children:"PSP34 trait"})," brings all familiar functions from ERC721 plus a few extra:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"collection_id()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"balance_of()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"owner_of()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"allowance()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"approve()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"transfer()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"total_supply()"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Openbrush ",(0,t.jsx)(n.a,{href:"https://github.com/Supercolony-net/openbrush-contracts/blob/main/contracts/src/traits/psp34/extensions/metadata.rs",children:"Metadata"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"get_attribute()"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Openbrush ",(0,t.jsx)(n.a,{href:"https://github.com/Supercolony-net/openbrush-contracts/blob/main/contracts/src/traits/psp34/extensions/mintable.rs",children:"Mintable"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"mint()"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Openbrush ",(0,t.jsx)(n.a,{href:"https://github.com/Supercolony-net/openbrush-contracts/blob/main/contracts/src/traits/psp34/extensions/enumerable.rs",children:"Enumerable"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"owners_token_by_index()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"token_by_index()"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Openbrush ",(0,t.jsx)(n.a,{href:"https://github.com/Supercolony-net/openbrush-contracts/blob/main/contracts/src/access/ownable/mod.rs",children:"Ownable"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"renounceOwnership ()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"transferOwnership()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"owner()"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Major differences when compared with ERC721 are:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Metadata"})," trait brings possibility to define numerous attributes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PSP34"})," trait brings collection_id() which can be used or ignored in contracts"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["We could have used ",(0,t.jsx)(n.code,{children:"Burnable"})," trait as well but for simplicity it is skipped in this tutorial since burning can be performed by sending a token to address 0x00."]}),"\n",(0,t.jsxs)(n.p,{children:["After this step your code should look like ",(0,t.jsx)(n.a,{href:"https://github.com/swanky-dapps/nft/tree/tutorial/wizard-step1",children:"this"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"build-deploy-and-interact-with-the-contract",children:"Build, Deploy and Interact with the Contract"}),"\n",(0,t.jsx)(n.p,{children:"Build your contract:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd contracts/shiden34\ncargo contract build --release\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"shiden34.contract"})})," target to deploy contract.\nThe file is located in this folder:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"ls target/ink/shiden34/\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To deploy your contract using the Polkadot.js apps portal, follow the previous guide, or use the ",(0,t.jsx)(n.a,{href:"https://contracts-ui.substrate.io/?rpc=wss://rpc.shibuya.astar.network",children:"contracts-ui"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["You can start interacting with your contract. You will notice that one token is already minted. This is due to the ",(0,t.jsx)(n.code,{children:"mint()"})," call in the contract's constructor ",(0,t.jsx)(n.code,{children:"new()"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Try minting another token by calling ",(0,t.jsx)(n.code,{children:"mint()"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Read the token ",(0,t.jsx)(n.code,{children:"ownerOf()"})," for your newly minted token."]}),"\n",(0,t.jsxs)(n.li,{children:["Check that ",(0,t.jsx)(n.code,{children:"totalSupply()"})," has increased."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>o});var t=r(67294);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);